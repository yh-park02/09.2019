{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset129 .AppleSDGothicNeoI-Regular;\f2\fnil\fcharset0 HelveticaNeue-Bold;
\f3\fnil\fcharset0 HelveticaNeue-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red251\green2\blue7;}
{\*\expandedcolortbl;;\cspthree\c7722\c19485\c96080;\cspthree\c91921\c25263\c14503;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs36 \cf0 9
\f1 \'bf\'f9
\f0  5
\f1 \'c0\'cf
\f0  
\f1 \'b8\'f1\'bf\'e4\'c0\'cf
\f0  
\f1 \'bc\'f6\'be\'f7
\f0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 **
\f1 \cf2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b8\'f0\'c0\'d3\
\

\f0 \cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
-
\f1 \'b9\'e8\'bf\'ad
\f0 (Array, List) : 
\f1 \'ba\'f1\'b1\'b3\'b0\'a1\'b4\'c9\'c7\'d1
\f0 (
\f1 \'b5\'bf\'c0\'cf\'c7\'d1
\f0  
\f1 \'c7\'fc\'c5\'c2\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 ) 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b8\'f0\'be\'c6\'b3\'f5\'c0\'ba
\f0  
\f1 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6
\f0 \

\f1 \'c5\'d7\'c0\'cc\'ba\'ed\'c0\'c7
\f0  
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'b0\'b3\'b3\'e4\'c0\'cc\'b4\'d9
\f0 . \
\
**Array : 
\f1 \'c5\'a9\'b1\'e2
\f0  
\f1 \'ba\'af\'b0\'e6\'c0\'cc
\f0  
\f1 \'be\'c8\'b5\'c7\'b4\'c2
\f0  
\f1 \'ba\'f1\'b1\'b3\'b0\'a1\'b4\'c9\'c7\'d1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b8\'f0\'be\'c6\'b3\'f5\'c0\'ba
\f0  
\f1 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6
\f0 \

\f1 \'c5\'a9\'b1\'e2
\f0  
\f1 \'ba\'af\'b0\'e6\'c0\'cc
\f0  
\f1 \'be\'c8\'b5\'c8\'b4\'d9\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'cc
\f0  
\f1 \'b4\'d9\'b8\'a5
\f0  List
\f1 \'bf\'cd
\f0  
\f1 \'b4\'d9\'b8\'a5
\f0  
\f1 \'c1\'a1\'c0\'cc\'b4\'d9
\f0 .\
\
-Class 
\f1 \'b6\'c7\'b4\'c2
\f0  Map(Dictionary) : 
\f1 \'c5\'d7\'c0\'cc\'ba\'ed\'c0\'c7
\f0  
\f1 \'c7\'e0\'c0\'c7
\f0  
\f1 \'b0\'b3\'b3\'e4\'c0\'cc\'b4\'d9
\f0 .\
 
\f1 \'b8\'f0\'bf\'a9\'bc\'ad
\f0  
\f1 \'c7\'cf\'b3\'aa\'b8\'a6
\f0  
\f1 \'b3\'aa\'c5\'b8\'b3\'bb\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d1
\f0  
\f1 \'b8\'f1\'c0\'fb\'c0\'b8\'b7\'ce
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9
\f0 . \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 -
\f1 \'c5\'d7\'c0\'cc\'ba\'ed
\f0  
\f1 \'b1\'b8\'c1\'b6\'b8\'a6
\f0  
\f1 \'b8\'b8\'b5\'e9
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  Class
\f1 \'c0\'c7
\f0  List 
\f1 \'b6\'c7\'b4\'c2
\f0  Map
\f1 \'c0\'c7
\f0  List
\f1 \'b8\'a6
\f0  
\f1 \'b8\'b8\'b5\'e7\'b4\'d9
\f0 .\
\
1.
\f1 \'c0\'cf\'c2\'f7\'bf\'f8\'b9\'e8\'bf\'ad
\f0  : 
\f1 \'c2\'f7\'bf\'f8\'c0\'cc
\f0  
\f1 \'c7\'cf\'b3\'aa\'c0\'ce
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0 , \
1)
\f1 \'bb\'fd\'bc\'ba\'b9\'e6\'b9\'fd
\f0 \
*
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \

\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0  [] 
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'c0\'cc\'b8\'a7
\f0  = \{
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b3\'aa\'bf\'ad
\f0 \};\
ex) Int [] ar = \{100,300,200\};\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0    [
\f1 \'bf\'b9\'b9\'ae
\f0 ] \
   //
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \
   //
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 1
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0  [] 
\f1 \'c0\'cc\'b8\'a7
\f0  = \{30, 20, 40 50\};\
  
\f2\b int
\f0\b0  [] ages = \{30, 20, 40, 50\};\
  //
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f0  
\f1 \'c8\'ae\'c0\'ce
\f0 \
  System.
\f3\i\b out
\f0\i0\b0 .printf("ages
\f1 \'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 :%d\\n", ages.length);\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 \
\
*
\f1 \'c3\'b3\'c0\'bd\'bf\'a1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'c0\'d6\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'ba
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \

\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0  [] 
\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0  = new 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 ];\

\f1 \'c0\'cc\'b7\'b8\'b0\'d4
\f0  
\f1 \'b8\'b8\'b5\'e9\'b8\'e9
\f0  
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba
\f0  0, boolean
\f1 \'c0\'ba
\f0  false, 
\f1 \'b3\'aa\'b8\'d3\'c1\'f6\'b4\'c2
\f0  null(
\f1 \'be\'c6\'c1\'f7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'be\'f8\'c0\'bd
\f0 )
\f1 \'b7\'ce
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
ex) Int [] xr = new int[5];  //
\f1 \'c1\'a4\'bc\'f6
\f0  5
\f1 \'b0\'b3\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \
\
2)
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'bc\'d3\'bc\'ba(\'b0\'b4\'c3\'bc\'c0\'c7 \'bc\'ba\'c1\'fa\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2 \'ba\'af\'bc\'f6)\
length : \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b8\'a6 \'b8\'ae\'c5\'cf\
ar.length : 3\

\f0 xr.length : 5\
\
3)
\f1 \'b9\'e8\'bf\'ad\'bf\'a1\'bc\'ad
\f0  
\f1 \'b0\'a2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c1\'a2\'b1\'d9
\f0 \

\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0 [
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f0 ] : 
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2
\f0  0
\f1 \'bf\'a1\'bc\'ad\'ba\'ce\'c5\'cd
\f0  length -(
\f1 \'bb\'a9\'b1\'e2
\f0 ) 1
\f1 \'b1\'ee\'c1\'f6
\f0  \

\f1 \'c0\'cc
\f0  
\f1 \'b9\'fc\'c0\'a7
\f0  
\f1 \'c0\'cc\'bf\'dc\'c0\'c7
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b8\'a6
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  ArrayIndexOutOfBoundsException
\f1 \'c0\'cc
\f0  
\f1 \'b9\'df\'bb\'fd
\f0 \

\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7\'b8\'b8
\f0  
\f1 \'b8\'b8\'b5\'e9\'b0\'ed
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'cf\'b0\'c5\'b3\'aa
\f0  
\f1 \'c5\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'b8\'b8\'b5\'e9\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'ba
\f0  
\f1 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad
\f0  \
.length
\f1 \'b8\'a6
\f0  
\f1 \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9
\f0  NullPointerExcption(
\f1 \'c0\'cc\'b8\'a7\'b8\'b8
\f0  
\f1 \'c0\'d6\'b0\'ed
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2
\f0  
\f1 \'be\'f8\'b4\'c2
\f0  
\f1 \'bf\'c0\'b7\'f9
\f0 )
\f1 \'c0\'cc
\f0  
\f1 \'b9\'df\'bb\'fd\'c7\'d1\'b4\'d9
\f0 .\
\
   [
\f1 \'c0\'a7\'c0\'c7
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0  
\f1 \'b3\'bb\'bf\'eb\'b5\'e9
\f0  
\f1 \'bc\'b3\'b8\'ed
\f0 ]\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0             	    \
	    //
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'ce\'b9\'f8\'c2\'b0
\f0  
\f1 \'bf\'e4\'bc\'d2\'b8\'a6
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
	    //
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'bf\'e4\'bc\'d2\'b8\'a6
\f0  
\f1 \'c3\'a3\'c0\'bb
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  [
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f0 ]\
	    //
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2
\f0  0~length-1\
	    System.
\f3\i\b out
\f0\i0\b0 .printf("ages
\f1 \'c0\'c7
\f0  
\f1 \'b5\'ce\'b9\'f8\'c2\'b0
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 :%d\\n", ages[1]);\
	    \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
	    \
	    //NullPointerExcption : 
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'cc
\f0  
\f1 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'be\'f8\'be\'ee\'bc\'ad
\f0  
\f1 \'b9\'df
\f0 \
	    //\ul br
\f1 \ulnone \'c0\'cc\'b6\'f3\'b4\'c2
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7\'c0\'bb
\f0  
\f1 \'bb\'fd\'bc\'ba\'c7\'d1
\f0  
\f1 \'b0\'cd
\f0 \
	    //=
\f1 \'c0\'bb
\f0  
\f1 \'c7\'d1\'c0\'fb\'c0\'cc
\f0  
\f1 \'be\'f8\'b1\'e2
\f0  
\f1 \'b6\'a7\'b9\'ae\'bf\'a1
\f0  
\f1 \'bd\'c7\'c1\'a6
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2
\f0  
\f1 \'bc\'d2\'c0\'af\'c7\'cf\'b0\'ed
\f0  
\f1 \'c0\'d6\'c1\'f6
\f0  
\f1 \'be\'ca\'b4\'d9
\f0 .\
	    //
\f1 \'c0\'cc\'b7\'b1\'b0\'e6\'bf\'ec\'bf\'a1
\f0  .
\f1 \'c0\'bb
\f0  
\f1 \'bc\'d3\'bc\'ba\'c0\'bb
\f0  
\f1 \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9
\f0  
\f1 \'bf\'a1\'b7\'af
\f0 (
\f1 \'bd\'c7\'c7\'e0
\f0  
\f1 \'be\'c8\'b5\'ca
\f0 )
\f1 \'b4\'c2
\f0  
\f1 \'be\'c6\'b4\'cf\'b0\'ed
\f0  \
	    //
\f1 \'bf\'b9\'bf\'dc
\f0 (
\f1 \'bd\'c7\'c7\'e0\'c0\'ba
\f0  
\f1 \'b5\'c7\'b4\'c2\'b5\'a5
\f0  
\f1 \'b9\'ae\'c1\'a6
\f0  
\f1 \'b9\'df\'bb\'fd
\f0 )
\f1 \'b0\'a1
\f0  
\f1 \'b9\'df\'bb\'fd
\f0 \
	    //
\f1 \'b4\'dc\'be\'f0
\f0 (
\f1 \'b0\'ad\'c1\'a6\'b7\'ce
\f0  
\f1 \'bf\'b9\'bf\'dc\'b8\'a6
\f0  
\f1 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b0\'b4\'c2
\f0  
\f1 \'b0\'cd
\f0 )\
	    \
	    
\f2\b int
\f0\b0  [] br;   //= new \ul int\ulnone [4]; <- 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b3\'d6\'be\'ee\'c1\'d6\'b8\'e9
\f0  
\f1 \'bf\'c0\'b7\'f9\'be\'f8\'be\'ee
\f0 \
	    System.
\f3\i\b out
\f0\i0\b0 .printf("br
\f1 \'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 :%d\\n",br.length);\
	   \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
	    \
	    //ArrayIndexOutOfBoundsException\
	    //
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  4
\f1 \'b0\'b3\'c0\'ce\'b5\'a5
\f0  4
\f1 \'b9\'f8\'bf\'a1
\f0  
\f1 \'c1\'a2\'b1\'d9\'c7\'cf\'b8\'e9
\f0  
\f1 \'c0\'df\'b8\'f8\'b5\'c8
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba
\f0 \
	   \
	    
\f2\b int
\f0\b0  [] \ul br\ulnone  = 
\f2\b new
\f0\b0  
\f2\b int
\f0\b0 [4];\
	    System.
\f3\i\b out
\f0\i0\b0 .printf("br[4]:%d\\n",br[4]);
\fs36 \
\
4)
\f1 \'b9\'e8\'bf\'ad\'c0\'ba
\f0  
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'cc\'b4\'d9
\f0 .\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \'b1\'e2\'ba\'bb\'c7\'fc
\f0 : 1
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d1
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 , 
\f1 \'ba\'af\'bc\'f6\'b0\'a1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c0\'da\'c3\'bc\'b8\'a6
\f0  
\f1 \'c0\'c7\'b9\'cc
\f0 , \
boolean, byte, short, char, int, long, floor, double\
\

\f1 \'c2\'fc\'c1\'b6\'c7\'fc
\f0 : 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c2\'fc\'c1\'b6\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'cc\'b4\'d9
\f0 , 0
\f1 \'b0\'b3
\f0  
\f1 \'c0\'cc\'bb\'f3\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d1\'b4\'d9
\f0 , \

\f1 \'b9\'e8\'bf\'ad
\f0 (
\f1 \'c0\'ba
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb
\f0 )
\f1 \'b0\'fa
\f0  
\f1 \'c5\'ac\'b7\'a1\'bd\'ba
\f0 (
\f1 \'b4\'c2
\f0  
\f1 \'bc\'d3\'bc\'ba\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb
\f0 )
\f1 \'c0\'c7
\f0  
\f1 \'b0\'b4\'c3\'bc\'b8\'b8
\f0  
\f1 \'c2\'fc\'c1\'b6
\f0 \

\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c1\'f7\'c1\'a2
\f0  
\f1 \'b0\'a1\'b8\'ae\'c5\'b0\'c1\'f6
\f0  
\f1 \'be\'ca\'b0\'ed
\f0  
\f1 \'bd\'c3\'c0\'db\'c0\'a7\'c4\'a1\'b8\'b8
\f0  
\f1 \'b0\'a1\'b8\'ae\'c5\'b2\'b4\'d9
\f0 .\
\
2.
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'c1\'a2\'b1\'d9
\f0 \
=>
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2
\f0  
\f1 \'c0\'cf\'b9\'dd
\f0  
\f1 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce
\f0  
\f1 \'c0\'fc\'c3\'bc\'b8\'a6
\f0  
\f1 \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9\'c7\'d4
\f0 \
=>
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b8\'f0\'c0\'d3\'b5\'e9\'c0\'ba
\f0  
\f1 \'ba\'fc\'b8\'a5
\f0  
\f1 \'bf\'ad\'b0\'c5
\f0 (Fast Enumeration)
\f1 \'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce
\f0  
\f1 \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \

\f1 \'b9\'e8\'bf\'ad
\f0 , List(
\f1 \'b4\'c3\'b8\'ae\'b0\'c5\'b3\'aa\'c1\'d9\'c0\'cc\'b4\'c2\'b0\'d4\'b0\'a1\'b4\'c9
\f0 ), set
\f1 \'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \

\f1 \'c0\'cc\'b7\'af\'c7\'d1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b5\'e9\'c0\'ba
\f0  Iterable 
\f1 \'c0\'cc\'b6\'f3\'b0\'ed\'b5\'b5
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
\

\f1 \'ba\'fc\'b8\'a5\'bf\'ad\'b0\'c5
\f0 (Fast Enumeration) 
\f1 \'bb\'e7\'bf\'eb\'b9\'fd :
\f0 \
for(
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  1
\f1 \'b0\'b3\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'c0\'d3\'bd\'c3\'ba\'af\'bc\'f6
\f0  : 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b8\'f0\'c0\'d3\'c0\'cc\'b8\'a7
\f0 )\{\
    
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d2
\f0  
\f1 \'b3\'bb\'bf\'eb
\f0 \
\}\
\
  
\fs24            [
\f1 \'bf\'b9\'b9\'ae
\f0 ]
\fs36 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0                // 
\f1 \'b9\'e8\'bf\'ad
\f0  
\f1 \'b8\'b8\'b5\'e9\'b1\'e2
\f0 \
		String [] Korean = \{"
\f1 \'be\'c8\'c1\'df\'b1\'d9
\f0 ", "
\f1 \'c8\'ab\'b9\'fc\'b5\'b5
\f0 ", "
\f1 \'c0\'b1\'ba\'c0\'b1\'e6
\f0 ","
\f1 \'c0\'cc\'ba\'c0\'c3\'a2
\f0 ","
\f1 \'c0\'af\'b0\'fc\'bc\'f8
\f0 ", "
\f1 \'b1\'e8\'b1\'b8
\f0 "\};\
		\
		// 
\f1 \cf2 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'c1\'a2\'b1\'d9
\f0 \cf0  - 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f0  
\f1 \'b8\'ae\'c5\'cd\'b7\'b2\'b7\'ce
\f0  
\f1 \'c0\'db\'bc\'ba
\f0 \
		// 
\f1 \'b8\'ae\'c5\'cd\'b7\'b2\'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1
\f0  
\f1 \'ba\'af\'c8\'ad\'b0\'a1
\f0  
\f1 \'bb\'fd\'b1\'e2\'b8\'e9
\f0  
\f1 \'c3\'e2\'b7\'c2\'ba\'ce\'ba\'d0\'c0\'bb
\f0  
\f1 \'bc\'f6\'c1\'a4\'c0\'bb
\f0  
\f1 \'c7\'d8\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
		
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i = 0; i<4; i=i+1) \{   \
			System.
\f3\i\b out
\f0\i0\b0 .printf("%s\\n", Korean[i]);\
		\}\
				\
		\
		//
\f1 \cf2 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f0  
\f1 \'bc\'d3\'bc\'ba\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'bc\'b3\'c1\'a4
\f0 \cf0 \
		//
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1
\f0  
\f1 \'ba\'af\'c8\'ad\'b0\'a1
\f0  
\f1 \'bb\'fd\'b0\'dc\'b5\'b5
\f0  
\f1 \'c3\'e2\'b7\'c2\'ba\'ce\'ba\'d0\'c0\'bb
\f0  
\f1 \'bc\'f6\'c1\'a4\'c7\'d2
\f0  
\f1 \'c7\'ca\'bf\'e4\'b0\'a1
\f0  
\f1 \'be\'f8\'b4\'d9
\f0 .\
		
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i = 0; i< Korean.length; i=i+1) \{   \
			System.
\f3\i\b out
\f0\i0\b0 .printf("%s\\n", Korean[i]);\
		\}\
		\
		\
		\
		//
\f1 \'c0\'da\'c1\'d6
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'bc\'d3\'bc\'ba\'c0\'c7
\f0  
\f1 \'c7\'fc\'c5\'c2\'b7\'ce
\f0  
\f1 \'c0\'d6\'b4\'d9\'b8\'e9
\f0  
\f1 \'b8\'c5\'b9\'f8
\f0  
\f1 \'c0\'cc\'b8\'a7\'c0\'bb
\f0  
\f1 \'c3\'a3\'be\'c6\'bc\'ad
\f0  
\f1 \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'ba
\f0  \
		
\f1 \'bd\'c3\'b0\'a3\'b3\'b6\'ba\'f1\'b0\'a1
\f0  
\f1 \'b5\'c9
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 . 
\f1 \'c0\'cc\'b7\'b1\'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2
\f0  
\f1 \cf2 \'bc\'d3\'bc\'ba\'c0\'bb
\f0  
\f1 \'c0\'d3\'bd\'c3\'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'d8\'bc\'ad
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'c1\'a2\'b1\'d9
\f0  
\f1 \'bc\'d3\'b5\'b5\'b0\'a1
\f0  
\f1 \'c7\'e2\'bb\'f3\cf0 \'b5\'c9
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\
		
\f2\b int
\f0\b0  len = Korean.length;\
		\
		
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i = 0; i<len; i=i+1) \{   \
			System.
\f3\i\b out
\f0\i0\b0 .printf("%s\\n", Korean[i]);\
		\}\
\
\
\
               // 
\f1 \cf2 \'ba\'fc\'b8\'a5
\f0  
\f1 \'bf\'ad\'b0\'c5
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 (Fast Enumeration) \cf0 \
		
\f2\b for
\f0\b0  (String name : Korean) \{\
			System.
\f3\i\b out
\f0\i0\b0 .printf("%s\\n", name);\
		\}
\fs36 \
\
3.MVC 
\f1 \'c6\'d0\'c5\'cf
\f0 \
=>
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1
\f0  
\f1 \'ba\'af\'b0\'e6\'c0\'cc
\f0  
\f1 \'b9\'df\'bb\'fd\'c7\'cf\'b4\'f5\'b6\'f3\'b5\'b5
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2
\f0  
\f1 \'ba\'ce\'ba\'d0\'c0\'bb
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'b5\'b5\'b7\'cf
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb
\f0  
\f1 \'b8\'b8\'b5\'e5\'b4\'c2
\f0  
\f1 \'b9\'e6\'bd\'c4
\f0 \
=>
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  Model
\f1 \'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c7\'cf\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2
\f0  
\f1 \'ba\'ce\'ba\'d0\'c0\'bb
\f0  view 
\f1 \'b1\'d7\'b8\'ae\'b0\'ed
\f0  
\f1 \'c0\'cc\'b8\'a6
\f0  
\f1 \'bf\'ac\'b0\'e1\'c7\'cf\'b4\'c2
\f0  
\f1 \'ba\'ce\'ba\'d0\'c0\'bb
\f0  Controller
\f1 \'b6\'f3\'b0\'ed
\f0  
\f1 \'c7\'d8\'bc\'ad
\f0  MVC
\f1 \'b6\'f3\'b0\'ed
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
=>
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c8\'b0\'bf\'eb\'c7\'cf\'b4\'c2
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'bf\'a1\'bc\'ad
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'c1\'df\'bf\'e4\'c7\'cf\'b0\'ed
\f0  
\f1 \'c0\'da\'c1\'d6
\f0  
\f1 \'be\'f0\'b1\'de\'b5\'c7\'b4\'c2
\f0  
\f1 \'c6\'d0\'c5\'cf\'c0\'cc\'b4\'d9
\f0 .\
\
       \
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
**
\f1 \cf2 \'b4\'d9\'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0  \cf0 \
=> 
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'c2\'f7\'bf\'f8
\f0 ([ ])
\f1 \'c0\'cc
\f0  2
\f1 \'b0\'b3
\f0  
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0 \
=>2
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0  - 
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0 \
=>3
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0  - 2
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0  \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 2
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\cf0 \'c0\'bb
\f0  
\f1 \'c7\'e0\'b7\'c4
\f0 (Matrix)
\f1 \'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c7\'cf\'b0\'ed
\f0  
\f1 \'c0\'cf\'b9\'dd
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2\'b5\'a5\'b4\'c2
\f0  
\f1 \'b1\'c7\'c0\'e5\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'b0\'ed
\f0  
\f1 \cf2 \'c0\'cc\'b9\'cc\'c1\'f6\'b8\'a6
\f0  
\f1 \'c7\'a5\'c7\'f6\'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \cf0 \
1.2
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \
1)
\f1 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'c1\'b8\'c0\'e7\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 1
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [ ] [ ] 
\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0  = \{\{
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b3\'aa\'bf\'ad
\f0 \}, \{
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b3\'aa\'bf\'ad
\f0 \}.......\};\
\
2)
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed
\f0  
\f1 \'b3\'aa\'c1\'df\'bf\'a1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \
=> 
\f1 \'c7\'e0\'b0\'fa
\f0  
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'c5\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \

\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 1
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [ ] [ ] 
\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0  = new 
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [
\f1 \'c7\'e0\'c0\'c7\'c5\'a9\'b1\'e2
\f0 ][
\f1 \'bf\'ad\'c0\'c7\'c5\'a9\'b1\'e2
\f0 ];\

\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'c7\'e0\'c0\'c7
\f0  
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'c5\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'b5\'bf\'c0\'cf\'c7\'cf\'b0\'d4
\f0  
\f1 \'b8\'b8\'b5\'e9
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0  - 
\f1 \'c0\'cc
\f0  
\f1 \'b0\'e6\'bf\'ec\'b4\'c2
\f0  
\f1 \'c0\'cf\'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\'b7\'ce
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad
\f0  
\f1 \'bb\'e7\'bf\'eb\'b0\'a1\'b4\'c9\
\
=>\'c7\'e0\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'b8\'b8\'b5\'e9\'b0\'ed \'b3\'aa\'c1\'df\'bf\'a1 \'bf\'ad\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'bc\'b3\'c1\'a4\
\'b5\'a5\'c0\'cc\'c5\'cd
\f0 1
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [ ] [ ] 
\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0  = new 
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [
\f1 \'c7\'e0\'c0\'c7\'c5\'a9\'b1\'e2
\f0 ][
\f1  
\f0 ];\

\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0 [
\f1 \'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba
\f0 ] = new 
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'c5\'a9\'b1\'e2
\f0 ];\

\f1 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7
\f0 [
\f1 \'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba
\f0 ] = new 
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 [
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'c5\'a9\'b1\'e2
\f0 ];\

\f1 \'b0\'a2
\f0  
\f1 \'c7\'e0\'c0\'c7
\f0  
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'c5\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'b4\'d9\'b8\'a3\'b0\'d4
\f0  
\f1 \'b8\'b8\'b5\'e9
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2
\f0  
\f1 \'b9\'e6\'b9\'fd - \'c3\'df\'c3\'b5\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'ba \'be\'c6\'b4\'d4\
\
3)2\'c2\'f7\'bf\'f8\'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'a2\'b1\'d9\
\'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7[\'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba][\'bf\'ad\'c0\'ce\'b5\'a6\'bd\'ba]\
\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs26 \cf0              [\'bf\'b9\'b9\'ae]
\fs36 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0                // 2
\f1 \'c7\'e0
\f0  3
\f1 \'bf\'ad
\f0  
\f1 \'c2\'a5\'b8\'ae
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6\'b4\'eb\'c0\'d4\'c7\'d1
\f0  
\f1 \'bb\'fd\'c5\'c2\'bf\'a1\'bc\'ad
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \
		String[][] korean = \{ \{ "
\f1 \'be\'c6\'c0\'cc\'b8\'b0
\f0 ", "
\f1 \'bd\'bd\'b1\'e2
\f0 ", "
\f1 \'c1\'b6\'c0\'cc
\f0 " \}, \{ "
\f1 \'b8\'f0\'b8\'f0
\f0 ", "
\f1 \'c2\'ea\'c0\'a7
\f0 ", "
\f1 \'c1\'a4\'bf\'ac
\f0 " \} \};\
\
		// 2
\f1 \'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c1\'a2\'b1\'d9
\f0 \
		// 2
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb
\f0 \
		
\f2\b for
\f0\b0  (
\f2\b int
\f0\b0  row = 0; row < 2; row = row + 1) \{\
			
\f2\b for
\f0\b0  (
\f2\b int
\f0\b0  col = 0; col < 3; col = col + 1) \{\
				System.
\f3\i\b out
\f0\i0\b0 .println(korean[row][col]);\
			\}\
		\}\
		\
		System.
\f3\i\b out
\f0\i0\b0 .println("--------------------------------\\n");\
		\
		// 
\f1 \'c0\'a7\'c0\'c7
\f0  
\f1 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'bb
\f0  
\f1 \'c7\'cf\'b3\'aa\'c0\'c7
\f0  
\f1 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'b8\'b7\'ce
\f0  
\f1 \'c3\'b3\'b8\'ae
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \
		// 
\f1 \'c7\'e0
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2
\f0  
\f1 \'bf\'ad\'c0\'c7
\f0  
\f1 \'b0\'b3\'bc\'f6\'c0\'cf
\f0  
\f1 \'b6\'a7\'b8\'b6\'b4\'d9
\f0  
\f1 \'ba\'af\'b0\'e6
\f0  : 
\f1 \'c6\'af\'c1\'a4\'c7\'d1
\f0  
\f1 \'b0\'b3\'bc\'f6\'b8\'b8\'c5\'ad
\f0  
\f1 \'c1\'f8\'c7\'e0\'c7\'d1
\f0  
\f1 \'c8\'c4
\f0  
\f1 \'ba\'af\'b0\'e6\'b5\'c7\'b4\'c2
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'ba
\f0  
\f1 \'b8\'f2\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \
		\
		//
\f1 \'bf\'ad\'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2
\f0  0
\f1 \'ba\'ce\'c5\'cd
\f0  
\f1 \'bf\'ad\'c0\'ce\'b5\'a6\'bd\'ba
\f0 -1 
\f1 \'b1\'ee\'c1\'f6\'b8\'a6
\f0  
\f1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce
\f0  
\f1 \'b9\'dd\'ba\'b9
\f0 \
		//
\f1 \'c0\'cf\'c1\'a4\'c7\'d1
\f0  
\f1 \'b9\'fc\'c0\'a7
\f0  
\f1 \'b3\'bb\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce
\f0  
\f1 \'c7\'cf\'b5\'b5\'b7\'cf
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'b3\'aa\'b8\'d3\'c1\'f6\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb
\f0 \
		\
		
\f2\b for
\f0\b0  (
\f2\b int
\f0\b0  i = 0; i < 6; i = i + 1) \{\
			System.
\f3\i\b out
\f0\i0\b0 .println(korean[i/3][i%3]);\
		\}\
		\
		System.
\f3\i\b out
\f0\i0\b0 .println("--------------------------------\\n");\
		\
		\
		//
\f1 \'c0\'cc\'c2\'f7\'bf\'f8
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'ba\'fc\'b8\'a5
\f0  
\f1 \'bf\'ad\'b0\'c5\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0  2
\f1 \'b9\'f8
\f0  
\f1 \'c7\'d8\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
		//
\f1 \'c7\'d1
\f0  
\f1 \'b9\'f8
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7\'b8\'b6\'b4\'d9
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'cc
\f0  
\f1 \'c7\'cf\'b3\'aa\'be\'bf
\f0  
\f1 \'b9\'fe\'b0\'dc\'c1\'f8\'b4\'d9
\f0 .\
		
\f2\b for
\f0\b0 (String [] imsi : korean) \{\
			
\f2\b for
\f0\b0 (String temp : imsi) \{\
				System.
\f3\i\b out
\f0\i0\b0 .printf("%s\\n", temp);\
			\}\
		\}
\f1\fs36 \
\
**\'b9\'e8\'bf\'ad\'bf\'a1\'bc\'ad \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'be\'cb\'b0\'ed\'b8\'ae\'c1\'f2\

\f0\fs24 		// 
\f1 \'b9\'e8\'bf\'ad
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \
		
\f2\b int
\f0\b0 [] ar = \{ 30, 50, 20, 76, 88 \};\
		// \ul ar
\f1 \ulnone \'b9\'e8\'bf\'ad\'bf\'a1\'bc\'ad
\f0  50
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 , 
\f1 \'c7\'d5\'b0\'e8
\f0  
\f1 \'c6\'f2\'b1\'d5\'c0\'bb
\f0  
\f1 \'b1\'b8\'c7\'d8\'bc\'ad
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
\
		// 
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'ba\'af\'bc\'f6\'b8\'a6
\f0  
\f1 \'b8\'b8\'b5\'e9\'b0\'ed
\f0  
\f1 \'be\'f3\'b8\'b6\'ba\'ce\'c5\'cd
\f0  
\f1 \'bd\'c3\'c0\'db\'c7\'d2\'c1\'f6
\f0  
\f1 \'c3\'ca\'b1\'e2\'b0\'aa\'c0\'bb
\f0  
\f1 \'bc\'b3\'c1\'a4
\f0 \
		// 
\f1 \'b4\'eb\'ba\'ce\'ba\'d0\'c0\'c7
\f0  
\f1 \'b0\'e6\'bf\'ec\'b4\'c2
\f0  0
\f1 \'c0\'b8\'b7\'ce
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'b0\'ed
\f0  
\f1 \'c1\'b6\'b0\'c7\'c0\'bb
\f0  
\f1 \'b8\'b8\'c1\'b7\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0  
\f1 \'b0\'b3\'bc\'f6\'b8\'a6
\f0  1
\f1 \'c1\'f5\'b0\'a1
\f0  
\f1 \'bd\'c3\'c5\'b0\'b8\'e9
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
		
\f2\b int
\f0\b0  cnt = 0;\
		// 
\f1 \'c7\'d5\'b0\'e8
\f0 : 
\f1 \'c7\'d5\'b0\'e8\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'ba\'af\'bc\'f6\'b8\'a6
\f0  
\f1 \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad
\f0  
\f1 \'c3\'b3\'c0\'bd
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'c0\'d6\'c0\'bb
\f0  
\f1 \'b0\'aa\'c0\'b8\'b7\'ce
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d1
\f0  
\f1 \'c8\'c4
\f0 \
		// 
\f1 \'c1\'b6\'b0\'c7\'c0\'bb
\f0  
\f1 \'b8\'b8\'c1\'b7\'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'c7\'d5\'b0\'e8\'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'d2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c7\'d5\'b0\'e8
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'f5\'c7\'d8\'c1\'d6\'b8\'e9
\f0  
\f1 \'b5\'cb\'b4\'cf\'b4\'d9
\f0 .\
		
\f2\b int
\f0\b0  sum = 0;\
\
		// 
\f1 \'c3\'d6\'b4\'eb
\f0 , 
\f1 \'c3\'d6\'bc\'d2
\f0 \
		// 
\f1 \'c3\'d6\'b4\'eb\'b0\'aa
\f0 : 
\f1 \'c3\'d6\'b4\'eb\'b0\'aa\'c0\'bb
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'ba\'af\'bc\'f6\'b8\'a6
\f0  
\f1 \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'c3\'b9\'b9\'f8\'c2\'b0
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b6\'c7\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b9\'fc\'c0\'a7
\f0 \
		// 
\f1 \'c1\'df\'bf\'a1\'bc\'ad
\f0  
\f1 \'be\'c6\'c1\'d6
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b0\'aa\'c0\'b8\'b7\'ce
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'b0\'ed
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad
\f0  
\f1 \'c0\'da\'bd\'c5\'ba\'b8\'b4\'d9
\f0  
\f1 \'b4\'f5
\f0  
\f1 \'c5\'ab
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0 \
		// 
\f1 \'b8\'b8\'b3\'aa\'b8\'e9
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'b0\'aa\'c0\'b8\'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'b8\'e9
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
\
		// 
\f1 \'c3\'d6\'bc\'d2\'b0\'aa
\f0 : 
\f1 \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'ba\'af\'bc\'f6\'b8\'a6
\f0  
\f1 \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'c3\'b9\'b9\'f8\'c2\'b0
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b6\'c7\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b9\'fc\'c0\'a7
\f0 \
		// 
\f1 \'c1\'df\'bf\'a1\'bc\'ad
\f0  
\f1 \'be\'c6\'c1\'d6
\f0  
\f1 \'c5\'ab
\f0  
\f1 \'b0\'aa\'c0\'b8\'b7\'ce
\f0  
\f1 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'b0\'ed
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad
\f0  
\f1 \'c0\'da\'bd\'c5\'ba\'b8\'b4\'d9
\f0  
\f1 \'b4\'f5
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0 \
		// 
\f1 \'b8\'b8\'b3\'aa\'b8\'e9
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'b0\'aa\'c0\'b8\'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'b8\'e9
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
\
		// 
\f1 \'c3\'d6\'b4\'eb\'b0\'aa\'b0\'fa
\f0  
\f1 \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'ba\'af\'bc\'f6
\f0 \
		
\f2\b int
\f0\b0  max = ar[0];\
		
\f2\b int
\f0\b0  min = ar[0];\
\
		// 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'bc\'f8\'c8\'b8
\f0 \
		
\f2\b for
\f0\b0  (
\f2\b int
\f0\b0  temp : ar) \{\
			// 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd
\f0  
\f1 \'c3\'d6\'b4\'eb\'b0\'aa\'c0\'bb
\f0  
\f1 \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'b4\'f5
\f0  
\f1 \'c5\'a9\'b8\'e9
\f0  
\f1 \'c3\'d6\'b4\'eb\'b0\'aa\'c0\'bb
\f0  
\f1 \'ba\'af\'b0\'e6
\f0 \
			
\f2\b if
\f0\b0  (max < temp) \{\
				max = temp;\
			\}\
			// 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd
\f0  
\f1 \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb
\f0  
\f1 \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'b4\'f5
\f0  
\f1 \'c0\'db\'c0\'b8\'b8\'e9
\f0  
\f1 \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb
\f0  
\f1 \'ba\'af\'b0\'e6
\f0 \
			
\f2\b if
\f0\b0  (min > temp) \{\
				min = temp;\
			\}\
\
			
\f2\b if
\f0\b0  (temp >= 50) \{\
				// 
\f1 \'b0\'b3\'bc\'f6
\f0 =
\f1 \'b0\'b3\'bc\'f6
\f0 +1\
				cnt = cnt + 1;\
				// 
\f1 \'c7\'d5\'b0\'e8\'b4\'c2
\f0 =
\f1 \'c7\'d5\'b0\'e8
\f0 +
\f1 \'c7\'d5\'c0\'bb
\f0  
\f1 \'b1\'b8\'c7\'d2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 \
				sum = sum + temp;\
\
			\}\
		\}\
		// 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		System.
\f3\i\b out
\f0\i0\b0 .printf("50
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 :%d\\n", cnt);\
		// 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c7\'d5\'b0\'e8
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		System.
\f3\i\b out
\f0\i0\b0 .printf("50
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c7\'d5\'b0\'e8
\f0 :%d\\n", sum);\
\
		// 
\f1 \'c6\'f2\'b1\'d5
\f0 \
		// 
\f1 \'c6\'f2\'b1\'d5\'c0\'ba
\f0  
\f1 \'c7\'d1
\f0  
\f1 \'b9\'f8\'b8\'b8
\f0  
\f1 \'b0\'e8\'bb\'ea\'c7\'cf\'b8\'e9
\f0  
\f1 \'b5\'c7\'b1\'e2
\f0  
\f1 \'b6\'a7\'b9\'ae\'bf\'a1
\f0  
\f1 \'b9\'dd\'ba\'b9\'b9\'ae
\f0  
\f1 \'b9\'d9\'b1\'f9\'bf\'a1\'bc\'ad
\f0  
\f1 \'c3\'b3\'b8\'ae\'c7\'d1\'b4\'d9
\f0 .\
		// 
\f1 \'c6\'f2\'b1\'d5\'c0\'bb
\f0  
\f1 \'b1\'b8\'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'b3\'aa\'b4\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'c7\'cf\'b1\'e2
\f0  
\f1 \'b6\'a7\'b9\'ae\'bf\'a1
\f0  
\f1 \'bc\'d2\'bc\'f6\'b4\'c2
\f0  
\f1 \'be\'ee\'b6\'bb\'b0\'d4
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b0\'cd\'c0\'ce\'c1\'f6
\f0  
\f1 \'b0\'ed\'b9\'ce\'c7\'d8\'ba\'c1\'be\'df\'c7\'d4
\f0 \
		// 
\f1 \'b3\'aa\'b4\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'b3\'aa\'b4\'a9\'b4\'c2
\f0  
\f1 \'bc\'f6\'b0\'a1
\f0  0
\f1 \'c0\'ce\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'d8\'be\'df\'c7\'d4
\f0 \
		
\f2\b if
\f0\b0  (cnt == 0) \{\
			System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c1\'b6\'b0\'c7\'bf\'a1
\f0  
\f1 \'b8\'c2\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9
\f0 .\\n");\
		\} 
\f2\b else
\f0\b0  \{\
			// 
\f1 \'bc\'d2\'bc\'f6
\f0  
\f1 \'b5\'ce\'b9\'f8\'c2\'b0
\f0  
\f1 \'c0\'da\'b8\'ae\'bf\'a1\'bc\'ad
\f0  
\f1 \'b9\'dd\'bf\'c3\'b8\'b2\'c7\'d8\'bc\'ad
\f0  
\f1 \'c3\'b9\'b9\'f8\'c2\'b0
\f0  
\f1 \'c0\'da\'b8\'ae\'b1\'ee\'c1\'f6\'b8\'b8
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
			// 
\f1 \'c1\'a4\'bc\'f6
\f0 /
\f1 \'c1\'a4\'bc\'f6\'b4\'c2
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  
\f1 \'c1\'a4\'bc\'f6\'b7\'ce
\f0  
\f1 \'b3\'aa\'bf\'c2\'b4\'d9
\f0 .\
			// 
\f1 \'c1\'a4\'bc\'f6
\f0 /
\f1 \'c1\'a4\'bc\'f6\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  
\f1 \'bc\'d2\'bc\'f6\'b1\'ee\'c1\'f6
\f0  
\f1 \'b1\'b8\'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2
\f0 \
			// 
\f1 \'c7\'cf\'b3\'aa\'c0\'c7
\f0  
\f1 \'c1\'a4\'bc\'f6\'b8\'a6
\f0  
\f1 \'bd\'c7\'bc\'f6\'b7\'ce
\f0  
\f1 \'b0\'ad\'c1\'a6
\f0  
\f1 \'c7\'fc
\f0  
\f1 \'ba\'af\'c8\'af\'c7\'d8\'bc\'ad
\f0  
\f1 \'c7\'d8\'be\'df
\f0  
\f1 \'c7\'d5\'b4\'cf\'b4\'d9
\f0 .\
			// double \ul avg\ulnone  = sum/\ul cnt\ulnone ; => double \ul avg\ulnone  = (double)sum/\ul cnt\ulnone ;\
			
\f2\b double
\f0\b0  avg = (
\f2\b double
\f0\b0 ) sum / cnt;\
			System.
\f3\i\b out
\f0\i0\b0 .printf("50
\f1 \'c0\'cc
\f0  
\f1 \'b3\'d1\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c6\'f2\'b1\'d5
\f0 :%.1f\\n", avg);\
		\}\
		// 
\f1 \'c3\'d6\'b4\'eb\'b0\'aa\'b0\'fa
\f0  
\f1 \'c3\'d6\'bc\'d2\'b0\'aa
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c3\'d6\'b4\'eb\'b0\'aa
\f0 :%d\\n", max);\
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c3\'d6\'bc\'d2\'b0\'aa
\f0 :%d\\n", min);\
\
		// 60
\f1 \'bf\'a1
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b0\'a1\'b1\'ee\'bf\'ee
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c1\'b6\'c8\'b8
\f0 \
		// 
\f1 \'be\'ee\'b6\'b2
\f0  
\f1 \'bc\'fd\'c0\'da\'bf\'a1
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b0\'a1\'b1\'ee\'bf\'ee
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c1\'b6\'c8\'b8\'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2
\f0 \
		// 
\f1 \'bc\'fd\'c0\'da\'bf\'cd\'c0\'c7
\f0  
\f1 \'c2\'f7\'c0\'cc\'b8\'a6
\f0  
\f1 \'c3\'a3\'b0\'ed
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'c2\'f7\'c0\'cc\'b0\'a1
\f0  
\f1 \'c3\'d6\'bc\'d2\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c3\'a3\'be\'c6\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
		// 
\f1 \'c3\'a3\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'ba
\f0  
\f1 \'c2\'f7\'c0\'cc\'c0\'c7
\f0  
\f1 \'c3\'d6\'bc\'d2\'b8\'a6
\f0  
\f1 \'c3\'a3\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'cc
\f0  
\f1 \'be\'c6\'b4\'cf\'b0\'ed
\f0  
\f1 \'c2\'f7\'c0\'cc\'b0\'a1
\f0  
\f1 \'c3\'d6\'bc\'d2\'b0\'a1
\f0  
\f1 \'b5\'c7\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'cc\'b4\'d9
\f0 .\
\
		
\f2\b int
\f0\b0  mindata = ar[0]; // 
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b0\'a1\'b1\'ee\'bf\'ee
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
		
\f2\b int
\f0\b0  minvalue = 999999999; // 60
\f1 \'b0\'fa\'c0\'c7
\f0  
\f1 \'c3\'d6\'bc\'d2
\f0  
\f1 \'c2\'f7\'c0\'cc\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
\
		
\f2\b for
\f0\b0  (
\f2\b int
\f0\b0  temp : ar) \{\
			//60
\f1 \'b0\'fa\'c0\'c7
\f0  
\f1 \'c2\'f7\'c0\'cc\'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'cf\'b1\'e2
\f0  \
			
\f2\b int
\f0\b0  cha = 0;\
			
\f2\b if
\f0\b0  (temp > 60) \{\
				cha = temp - 60;\
			\} 
\f2\b else
\f0\b0  \{\
				cha = 60 - temp;\
			\}\
			//
\f1 \'c2\'f7\'c0\'cc\'b0\'a1
\f0  
\f1 \'c3\'d6\'bc\'d2\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b1\'b8\'c7\'cf\'b1\'e2
\f0 \
			
\f2\b if
\f0\b0 (minvalue > cha) \{\
				minvalue = cha;\
				//
\f1 \'c2\'f7\'c0\'cc\'b0\'a1
\f0  
\f1 \'c3\'d6\'bc\'d2\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b8\'b8\'b3\'aa\'b8\'e9
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d8\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
				mindata = temp;				\
			\}\
		\}\
		//60
\f1 \'bf\'a1
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b0\'a1\'b1\'ee\'bf\'ee
\f0  
\f1 \'b0\'aa
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		System.
\f3\i\b out
\f0\i0\b0 .printf("60
\f1 \'bf\'a1
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b0\'a1\'b1\'ee\'bf\'ee
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 :%d 
\f1 \'c2\'f7\'c0\'cc
\f0 :%d\\n", mindata, minvalue);\
	\}\
\}\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs36 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 \
\'c3\'e2\'b7\'c2\'b0\'aa :     
\f0 50
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 :3\
                50
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c7\'d5\'b0\'e8
\f0 :214\
                50
\f1 \'c0\'cc
\f0  
\f1 \'b3\'d1\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c6\'f2\'b1\'d5
\f0 :71.3\
                
\f1 \'c3\'d6\'b4\'eb\'b0\'aa
\f0 :88\
                
\f1 \'c3\'d6\'bc\'d2\'b0\'aa
\f0 :20
\f1\fs36 \

\f0\fs24                60
\f1 \'bf\'a1
\f0  
\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b0\'a1\'b1\'ee\'bf\'ee
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 :50 
\f1 \'c2\'f7\'c0\'cc
\f0 :10
\f1\fs36 \
\
\
**\cf2 \'c1\'a4\'b7\'c4(Sort)\cf0  : \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b3\'aa\'bf\'ad\
\'c1\'a4\'b7\'c4\'c0\'c7 \'b8\'f1\'c0\'fb : \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bb\'a1\'b8\'ae \'c3\'a3\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad \
=> \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8(Ascending): \'c0\'db\'c0\'ba \'b0\'cd\'bf\'a1\'bc\'ad \'c5\'ab \'b0\'cd \'bc\'f8\'c0\'b8\'b7\'ce \'b9\'e8\'c4\'a1, \'c1\'a4\'b7\'c4\'c0\'c7 \'b1\'e2\'ba\'bb\'c0\'ba \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8\
=> \'b3\'bb\'b8\'b2\'c2\'f7\'bc\'f8(Descending) : \'c5\'ab \'b0\'cd\'bf\'a1\'bc\'ad \'c0\'db\'c0\'ba \'b0\'cd \'bc\'f8\'c0\'b8\'b7\'ce \'b9\'e8\'c4\'a1, \
=> \'c1\'a4\'b7\'c4 \'be\'cb\'b0\'ed\'b8\'ae\'c1\'f2\
1)\cf2 Selsction sort(\'bc\'b1\'c5\'c3 \'c1\'a4\'b7\'c4)\cf0  - \'c7\'d0\'bd\'c0\'bf\'eb\
=> \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6 = n \'c0\'cc\'b6\'f3\'b4\'c2 \'b0\'a1\'c1\'a4\'c7\'cf\'bf\'a1 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 \'c3\'b9\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'ce\'c5\'cd n-1\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'b1\'ee\'c1\'f6 \'c0\'da\'bd\'c5\'c0\'c7 \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b8\'f0\'b5\'e7 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c1\'a4\'b7\'c4\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b\fs24 \cf0 int
\f0\b0  [] ar = \{80, 76, 99, 45, 72\};\
		//
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
		
\f2\b int
\f0\b0  len = ar.length;\
		//
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b0\'b3\'bc\'f6\'b0\'a1
\f0  n
\f1 \'c0\'cc\'b6\'f3\'b8\'e9
\f0  n-1
\f1 \'b9\'f8
\f0  
\f1 \'bc\'f6
\f0 \
		
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i =0; i<len-1; i =i+1) \{\
			//
\f1 \'c8\'b8\'c0\'fc\'bc\'f6
\f0  +1
\f1 \'b9\'f8\'c2\'b0\'ba\'ce\'c5\'cd
\f0  
\f1 \'b8\'b6\'c1\'f6\'b8\'b7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b1\'ee\'c1\'f6
\f0  
\f1 \'ba\'f1\'b1\'b3
\f0 \
			
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  j=i+1; j<len; j=j+1) \{\
				//
\f1 \'be\'d5\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'b5\'da\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'b8\'b4\'d9
\f0  
\f1 \'c5\'a9\'b4\'d9\'b8\'e9
\f0  swap\
				//swap
\f1 \'c0\'bb
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'c0\'d3\'c0\'c7\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'b8\'a6
\f0  
\f1 \'c7\'cf\'b3\'aa
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee
\f0  
\f1 \'c1\'d8\'b4\'d9
\f0 .\
				
\f2\b if
\f0\b0 (ar[i] > ar[j]) \{  // 
\f1 \cf2 \'b0\'a1\'bf\'ee\'b5\'a5
\f0  
\f1 \'b5\'ee\'c8\'a3\'b8\'b8
\f0  
\f1 \'b9\'dd\'b4\'eb\'b7\'ce
\f0  
\f1 \'b9\'d9\'b2\'e3\'c1\'d6\'b8\'e9
\f0  
\f1 \'b3\'bb\'b8\'b2\'c2\'f7\'bc\'f8
\f0 \cf0 \
				
\f2\b int
\f0\b0  temp = ar[i];\
				ar[i] = ar[j];\
				ar[j] = temp; 		\
				\}\
			\}			\
		\}\
		//
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  temp : ar) \{\
			System.
\f3\i\b out
\f0\i0\b0 .printf("%d\\t", temp);  //\\t 
\f1 \'c0\'ba
\f0  
\f1 \'bf\'b7\'c0\'b8\'b7\'ce
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 ,  \\n 
\f1 \'c0\'ba
\f0  
\f1 \'be\'c6\'b7\'a1\'b7\'ce
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0    \
		\}\
	\}\
\
\}\

\f1 \'c3\'e2\'b7\'c2\'b0\'aa
\f0  : 45	72	76	80	99( \\t 
\f1 \'b7\'ce
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'df\'c0\'bb
\f0  
\f1 \'b6\'a7
\f0  )\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs36 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0                        ( \\n 
\f1 \'b7\'ce
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'df\'c0\'bb
\f0  
\f1 \'b6\'a7
\f0  )\
                            45\
                            72\
                            76\
                            80\
                            99\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs36 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs28 \cf0 \'bc\'b1\'c5\'c3 \'c1\'a4\'b7\'c4\'c0\'ba b,c \'c0\'c7 \'bb\'f3\'b0\'fc\'b0\'fc\'b0\'e8\'b8\'a6 \'b8\'f0\'b8\'a3\'c1\'f6\'b8\'b8\
a>b\
a>c\
\'b9\'f6\'ba\'ed\'c1\'a4\'b7\'c4\'c0\'ba a>b>c \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 \
2)Bubble sort(\'c0\'ce\'c1\'a2\'c1\'a4\'b7\'c4)
\fs28 \'be\'d5\'c0\'b8\'b7\'ce \'b0\'a1\'b4\'c2\'b0\'c7 \'c7\'d1\'c4\'ad \'b9\'db\'bf\'a1 \'b8\'f8\'b0\'a8
\fs36 \
=>\'c3\'d6\'b4\'eb n-1 \'c8\'b8\'c0\'fc \'b5\'bf\'be\'c8 \'c0\'da\'bd\'c5\'c0\'c7 \'b9\'d9\'b7\'ce \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c1\'a4\'b7\'c4\'c7\'d1\'b4\'d9.\
=>\'b0\'a1\'c0\'e5 \'c5\'ab \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'c7 \'b5\'da\'b7\'ce \'ba\'b8\'b3\'bb\'b4\'c2 \'b9\'e6\'bd\'c4\
=> 1\'c8\'b8\'c0\'fc \'b5\'bf\'be\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b1\'b3\'c3\'bc\'b0\'a1 \'be\'f8\'c0\'b8\'b8\'e9 \'c1\'a4\'b7\'c4\'c0\'cc \'b5\'c8 \'b0\'cd\'c0\'cc\'b9\'c7\'b7\'ce \'ba\'f1\'b1\'b3\'b8\'a6 \'c1\'df\'c1\'f6\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'d9.\
\
\'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 n\'b0\'b3 \'c0\'cf \'b6\'a7 \
N-1\'c8\'b8\'c0\'fc \'b5\'bf\'be\'c8 \
0 - n-2\'b9\'f8\'c2\'b0 \'b1\'ee\'c1\'f6 \'c0\'da\'bd\'c5\'c0\'c7 \'b9\'d9\'b7\'ce \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\
0 - n-3\'b9\'f8\'c2\'b0 \'b1\'ee\'c1\'f6 \'c0\'da\'bd\'c5\'c0\'c7 \'b9\'d9\'b7\'ce \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\
\'a1\'a6\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b\fs24 \cf0 int
\f0\b0 [] ar = \{ 80, 76, 99, 45, 72 \};\
		// 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
		
\f2\b int
\f0\b0  len = ar.length;\
		// 
\f1 \'c3\'d6\'b4\'eb
\f0  n-1 
\f1 \'c8\'b8\'c0\'fc
\f0  0-3\
		
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i = 0; i < len - 1; i = i + 1) \{\
			\
			//
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b1\'b3\'c3\'bc\'b0\'a1
\f0  
\f1 \'c0\'d6\'be\'fa\'b4\'c2\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'d2
\f0  
\f1 \'ba\'af\'bc\'f6
\f0 \
			
\f2\b int
\f0\b0  flag = 0;\
			\
			// 
\f1 \'c3\'b9\'b9\'f8\'c2\'b0\'ba\'ce\'c5\'cd
\f0  
\f1 \'b8\'b6\'c1\'f6\'b8\'b7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c0\'cc\'c0\'fc\'b1\'ee\'c1\'f6
\f0 \
			
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  j = 0; j < len - 1 - i; j = j + 1) \{\
				// 
\f1 \'c0\'da\'bd\'c5\'c0\'c7
\f0  
\f1 \'b5\'da\'bf\'a1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd
\f0  
\f1 \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad
\f0  
\f1 \'c1\'a4\'b7\'c4
\f0 \
				
\f2\b if
\f0\b0  (ar[j] > ar[j + 1]) \{\
					
\f2\b int
\f0\b0  temp = ar[j];\
					ar[j] = ar[j + 1];\
					ar[j + 1] = temp;\
					//
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b1\'b3\'c3\'bc\'b0\'a1
\f0  
\f1 \'c0\'d6\'be\'fa\'b4\'d9\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'bb
\f0  
\f1 \'c7\'a5\'bd\'c3
\f0 \
					flag=1;\
				\}				\
			\}\
			//1
\f1 \'c8\'b8\'c0\'fc
\f0  
\f1 \'b5\'bf\'be\'c8
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b1\'b3\'c3\'bc\'b0\'a1
\f0  
\f1 \'be\'f8\'be\'fa\'c0\'b8\'b8\'e9
\f0  
\f1 \'ba\'f1\'b1\'b3
\f0  
\f1 \'c1\'be\'b7\'e1
\f0 \
			
\f2\b if
\f0\b0 (flag ==0) \{\
				
\f2\b break
\f0\b0 ;\
			\}\
		\}\
		
\f2\b for
\f0\b0  (
\f2\b int
\f0\b0  temp : ar) \{\
			System.
\f3\i\b out
\f0\i0\b0 .printf("%d\\t", temp);\
		\}\
	\}\
\}\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs36 \cf0 \
\
3)Insertion sort(\'bb\'f0\'c0\'d4\'c1\'a4\'b7\'c4)\
4)\cf3 Quick sort(\'c1\'df\'bf\'e4)-\cf0 \'bc\'d3\'b5\'b5\'b4\'c2 \'ba\'fc\'b8\'a3\'b3\'aa \'b8\'de\'b8\'f0\'b8\'ae\'b8\'a6 \'b8\'b9\'c0\'cc \'be\'b8\
\
\
**\'b0\'cb\'bb\'f6(Search)\
1.\'bc\'f8\'c2\'f7\'b0\'cb\'bb\'f6\
=>\'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'c7 \'be\'d5\'bf\'a1\'bc\'ad\'ba\'ce\'c5\'cd \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b0\'cb\'bb\'f6\
=>\'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'be\'f8\'b4\'d9\'b4\'c2 \'bb\'e7\'bd\'c7\'c0\'bb \'be\'cb\'b0\'d4 \'b5\'c7\'b4\'c2\'b5\'a5 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'c3\'bc\'b8\'a6 \'b4\'d9 \'ba\'f1\'b1\'b3\'c7\'d8\'ba\'c1\'be\'df \'be\'c8\'b4\'d9.\
\
2.\'c1\'a6\'be\'ee\'b0\'cb\'bb\'f6\
=>\'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c1\'a4\'b7\'c4\'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1 \'bb\'e7\'bf\'eb\
1)binary search(\'c0\'cc\'ba\'d0\'b0\'cb\'bb\'f6)\
=> \'c1\'df\'be\'d3\'b0\'aa\'b0\'fa \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c0\'db\'c0\'ba\'b8\'e9 \'bf\'de\'c2\'ca \'c5\'a9\'b8\'e9 \'bf\'c0\'b8\'a5\'c2\'ca\'bf\'a1 \'b4\'d9\'bd\'c3 \'c0\'cc\'ba\'d0\'b0\'cb\'bb\'f6\'c0\'bb \'bc\'f6\'c7\'e0\
\
\
10, 20, 30, 40, 50, 60, 70\
\
=>50\'c0\'bb \'b0\'cb\'bb\'f6\
7\'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'df \'b0\'a1\'bf\'ee\'b5\'a5 \'b0\'aa\'c0\'cc 4\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\
50\'c0\'cc 40\'ba\'b8\'b4\'d9 \'c5\'a9\'b9\'c7\'b7\'ce \'bf\'c0\'b8\'a5\'c2\'ca \'b5\'a5\'c0\'cc\'c5\'cd\'b5\'e9\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'b4\'d9\'bd\'c3 \'ba\'f1\'b1\'b3\
\'bf\'c0\'b8\'a5\'c2\'ca\'bf\'a1\'b4\'c2 3\'b0\'b3\'b0\'a1 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce \'b0\'a1\'bf\'ee\'b5\'a5 \'b0\'aa\'c0\'cc 60\'b0\'fa \'ba\'f1\'b1\'b3\
60\'ba\'b8\'b4\'d9\'b4\'c2 \'c0\'db\'c0\'b8\'b4\'cf\'b1\'ee \'bf\'de\'c2\'ca\'bf\'a1 \'c0\'d6\'b4\'c2 50\'b0\'fa \'ba\'f1\'b1\'b3\
 \
2)\cf3 \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'b0\'cb\'bb\'f6\cf0  - \'b1\'dd\'c0\'b6\'c2\'ca\'bf\'a1 \'c3\'eb\'be\'f7\'c7\'d2 \'b6\'a7 \'c7\'ca\'bc\'f6\
=> \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d1 \'b0\'cb\'bb\'f6\
=> \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\
\'c3\'b9\'b9\'f8\'c2\'b0\'bf\'cd \'b5\'ce\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 1\
\'bc\'bc\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'ce\'c5\'cd\'b4\'c2 \'c0\'cc\'c0\'fc \'b5\'a5\'c0\'cc\'c5\'cd 2\'b0\'b3\'c0\'c7 \'c7\'d5\
1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89\'a1\'a6.\
\
3)\'ba\'b8\'b0\'a3 \'b0\'cb\'bb\'f6- \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b1\'d5\'b5\'ee\'c7\'cf\'b0\'d4 \'b0\'a1\'c1\'b3\'b4\'d9\'b4\'c2 \'c0\'fc\'c1\'a6\'c7\'cf\'bf\'a1 \'bb\'e7\'bf\'eb\
\'b0\'cb\'bb\'f6\'b0\'aa - \'c3\'d6\'bc\'d2\'b0\'aa / \'c3\'d6\'b4\'eb\'b0\'aa - \'c3\'d6\'bc\'d2\'b0\'aa  \'c0\'bb \'b0\'e8\'bb\'ea\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b0\'cb\'bb\'f6\
\
60\'c0\'bb \'b0\'cb\'bb\'f6. 60-10/70-10 : 5/6*7 \'b8\'a6 \'b0\'e8\'bb\'ea\'c7\'d8\'bc\'ad \'b1\'d7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b0\'cb\'bb\'f6\
\
A - Z\
Z\'b8\'a6 \'b0\'cb\'bb\'f6\
Z-A/Z-A*26\'b9\'f8\'c2\'b0\'b8\'a6 \'b0\'cb\'bb\'f6\
\
4)Binary tree search(\'c0\'cc\'c1\'f8 \'c6\'ae\'b8\'ae \'b0\'cb\'bb\'f6)\
=>\'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 tree \'b1\'b8\'c1\'b6(\'b0\'a1\'c1\'f6\'c4\'a1\'b1\'e2\'c7\'fc\'bd\'c4)\'b7\'ce \'c1\'a4\'b7\'c4\'c7\'d8\'bc\'ad \'b0\'cb\'bb\'f6\
=>\'c6\'c4\'c0\'cf \'bd\'c3\'bd\'ba\'c5\'db\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\
\
\
[\'bf\'b9\'b9\'ae]\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0 	// 
\f1 \'c1\'a4\'bc\'f6
\f0  6
\f1 \'b0\'b3\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d5\'b4\'c2
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad
\f0  \
		//1-45
\f1 \'b1\'ee\'c1\'f6\'c0\'c7
\f0  
\f1 \'bc\'fd\'c0\'da\'b8\'a6
\f0  
\f1 \'c1\'df\'ba\'b9\'b5\'c7\'c1\'f6
\f0  
\f1 \'be\'ca\'b0\'d4
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'b4\'c2
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb
\f0  
\f1 \'c0\'db\'bc\'ba
\f0 \
		\
		Scanner sc = 
\f2\b new
\f0\b0  Scanner(System.
\f3\i\b in
\f0\i0\b0 );\
		//
\f1 \'c1\'a4\'bc\'f6
\f0  6
\f1 \'b0\'b3\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b9\'e8\'bf\'ad
\f0  
\f1 \'b8\'b8\'b5\'e9\'b1\'e2
\f0 \
		
\f2\b int
\f0\b0  [] lotto = 
\f2\b new
\f0\b0  
\f2\b int
\f0\b0 [6];\
		//
\f1 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce
\f0  for 
\f1 \'b1\'b8\'b9\'ae\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  \ul lotto\ulnone  
\f1 \'b9\'e8\'bf\'ad\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'bc\'f8\'c8\'b8\'c7\'cf\'b1\'e2
\f0 \
	    
\f2\b int
\f0\b0  len = lotto.length;\
	    
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i=0; i<len; i=i+1) \{\
	    	System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'bc\'fd\'c0\'da\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4
\f0 (1-45 
\f1 \'bb\'e7\'c0\'cc
\f0 ):");\
	    	lotto[i] = sc.nextInt();\
	    	\
	    	//1
\f1 \'ba\'ce\'c5\'cd
\f0  45 
\f1 \'bb\'e7\'c0\'cc\'c0\'c7
\f0  
\f1 \'bc\'fd\'c0\'da\'b0\'a1
\f0  
\f1 \'be\'c6\'b4\'cf\'b8\'e9
\f0  
\f1 \'b4\'d9\'bd\'c3
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2
\f0 \
	    	
\f2\b if
\f0\b0 (lotto[i] < 1 || lotto[i] > 45) \{\
	    		System.
\f3\i\b out
\f0\i0\b0 .printf("1-45 
\f1 \'bb\'e7\'c0\'cc\'c0\'c7
\f0  
\f1 \'bc\'fd\'c0\'da\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4
\f0 !\\n");\
	    	   i = i-1;\
	    	   
\f2\b continue
\f0\b0 ;\
	    	\}\
	    	\
	    \}\
	    //
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
	    
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  temp : lotto) \{\
	    	System.
\f3\i\b out
\f0\i0\b0 .printf("%d\\t", temp);\
	    \}\
		sc.close();\
	\}\
\
\}
\f1\fs36 \
\
\
\
\
\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0 \cf0 \
\
\
\
\
\
\
\
\
\
\
\
}