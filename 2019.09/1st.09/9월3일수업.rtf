{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset129 .AppleSDGothicNeoI-Regular;\f2\fnil\fcharset0 HelveticaNeue-Bold;
\f3\fnil\fcharset0 HelveticaNeue-BoldItalic;\f4\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red21\green42\blue251;\red0\green0\blue255;\red220\green161\blue13;
}
{\*\expandedcolortbl;;\cspthree\c16026\c28733\c95111;\cspthree\c7722\c19485\c96080;\cssrgb\c89412\c68627\c3922;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww16200\viewh19400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs36 \cf0 9
\f1 \'bf\'f9 
\f0 3
\f1 \'c0\'cf
\f0  
\f1 \'c8\'ad\'bf\'e4\'c0\'cf
\f0  
\f1 \'bc\'f6\'be\'f7
\f0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 **
\f1 \'c2\'fc\'c1\'b6\'c7\'fc
\f0 (reference Type)\
=>
\f1 \'b0\'a1\'b8\'ae\'c4\'d1\'be\'df
\f0  
\f1 \'c7\'cf\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  0
\f1 \'b0\'b3
\f0  
\f1 \'c0\'cc\'bb\'f3\'c0\'ce
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0 \
=>
\f1 \'c0\'cc
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2
\f0  
\f1 \'ba\'af\'bc\'f6\'b0\'a1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'bd\'c3\'c0\'db\'c0\'a7\'c4\'a1\'b8\'a6
\f0  
\f1 \'b0\'a1\'b8\'ae\'c5\'b0\'b0\'ed
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'ae\'bf\'c3
\f0  
\f1 \'b6\'a7\'b3\'aa
\f0  [ ] 
\f1 \'b3\'aa
\f0 \
     . 
\f1 \'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'c1\'a2\'b1\'d9\'c7\'cf\'b0\'d4
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
=>
\f1 \'b9\'e8\'bf\'ad\'b0\'fa
\f0  
\f1 \'c5\'ac\'b7\'a1\'bd\'ba
\f0 (
\f1 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba
\f0 , 
\f1 \'bf\'ad\'b0\'c5\'c7\'fc
\f0   
\f1 \'b5\'ee
\f0 )
\f1 \'b7\'ce
\f0  
\f1 \'ba\'ce\'c5\'cd
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee\'c1\'f8
\f0  
\f1 \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'b0\'a1
\f0  
\f1 \'c2\'fc\'c1\'b6\'c7\'fc
\f0 \
=>
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  
\f1 \'ba\'af\'bc\'f6\'b0\'a1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'bd\'c3\'c0\'db\'c0\'a7\'c4\'a1\'b8\'a6
\f0  
\f1 \'c0\'c7\'b9\'cc\'c7\'cf\'b0\'d4
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 [
\f1 \'c2\'fc\'c1\'b6\'c7\'fc
\f0  
\f1 \'bf\'b9\'c1\'a6
\f0 ]\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 int
\f0\b0  [] ar = \{10, 30, 20\}; //
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'b9\'e8\'bf\'ad\'c0\'bb
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0  - 
\f1 \'c2\'fc\'c1\'b6\'c7\'fc
\f0  : 0
\f1 \'b0\'b3\'c0\'cc\'bb\'f3\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0 \
System.
\f3\i\b out
\f0\i0\b0 .println("ar[0]: " + ar[0]);\
 
\f1 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :  ar[0]: 10\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 // 
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'c0\'cc\'b8\'a7\'b8\'b8\'c0\'b8\'b7\'ce\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'ae\'bf\'c3
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'be\'f8\'b4\'d9
\f0 . \
//
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'ae\'bf\'c3
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'c0\'cc\'b8\'a7
\f0  
\f1 \'c0\'cc\'bf\'dc\'c0\'c7
\f0  
\f1 \'b9\'ab\'be\'f9\'c0\'ce\'b0\'a1\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'be\'df\'c7\'d1\'b4\'d9
\f0 .\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\pardeftab560\slleading20\partightenfactor0

\fs22 \cf0 -1 
\f1 \'c0\'c7
\f0  
\f1 \'c0\'c7\'b9\'cc
\f0  :  
\f1 \'c0\'bd\'bc\'f6\'b0\'a1
\f0  
\f1 \'c7\'ca\'bf\'e4
\f0  
\f1 \'be\'f8\'c0\'bb
\f0  
\f1 \'b6\'a7
\f0  , -1
\f1 \'c0\'c7
\f0  
\f1 \'c0\'c7\'b9\'cc\'b4\'c2
\f0  
\f1 \'b9\'ab\'c7\'d1\'b4\'eb
\f0 \
**23 -> 2
\f1 \'c1\'f8\'bc\'f6\'b7\'ce
\f0  
\f1 \'b9\'d9\'b2\'e3\'ba\'b8\'b1\'e2
\f0 =10111 (
\f1 \'c4\'c4\'c7\'bb\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'cc\'c7\'d8\'c7\'cf\'b4\'c2\'b5\'a5
\f0  
\f1 \'b5\'b5\'bf\'f2
\f0 )
\fs24 \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97-----
\fs22 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 **overflow : 
\f1 \'c0\'da\'bd\'c5\'c0\'cc
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'be\'f8\'b4\'c2
\f0  
\f1 \'b9\'fc\'c0\'a7\'b8\'a6
\f0  
\f1 \'b3\'d1\'be\'ee\'bc\'b1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d8\'bc\'ad
\f0  
\f1 \'c0\'df\'b8\'f8\'b5\'c8
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2
\f0  
\f1 \'bb\'f3\'c8\'b2
\f0\fs24 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 [
\f1 \'bf\'b9\'c1\'a6
\f0 ]\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 int
\f0\b0  n = (
\f2\b int
\f0\b0 )(2100000000 + 2100000000);\
		System.
\f3\i\b out
\f0\i0\b0 .println("n: " + n);\
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  : n: -94967296\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 **Underflow :
\f1 \'c0\'da\'bd\'c5\'c0\'cc
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b9\'fc\'c0\'a7\'ba\'b8\'b4\'d9
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d8\'bc\'ad
\f0  
\f1 \'c0\'df\'b8\'f8\'b5\'c8
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6\'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2
\f0  
\f1 \'bb\'f3\'c8\'b2
\f0\fs24 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 [
\f1 \'bf\'b9\'c1\'a6
\f0 ]\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 int
\f0\b0  n = (
\f2\b int
\f0\b0 )(2100000000 + 2100000000);\
		System.
\f3\i\b out
\f0\i0\b0 .println("n: " + n);\
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :  n: 94967296\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97-----\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 double
\f0\b0  d = 0.1;\
	
\f2\b double
\f0\b0  sum = 0.0;\
	
\f2\b for
\f0\b0 (
\f2\b int
\f0\b0  i=0; i<100; i=i+1) \{\
		sum = sum + d;                             ====>> 
\f1 \'be\'f0\'c1\'a6\'b3\'aa
\f0  
\f1 \'b0\'e8\'bb\'ea
\f0  
\f1 \'b0\'aa\'c0\'cc
\f0  
\f1 \'c0\'df\'b8\'c2\'b4\'c2\'b0\'c7
\f0  
\f1 \'be\'c6\'b4\'cf\'b4\'cf
\f0  
\f1 \'c8\'ae\'c0\'ce\'c0\'cc
\f0  
\f1 \'c7\'ca\'bf\'e4
\f0 \
	\}\
	System.out.println("sum: "+sum);\
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :       sum: 9.99999999999998\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97-----
\fs22 \

\fs24 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 **type Casting(
\f1 \'c7\'fc
\f0  
\f1 \'ba\'af\'c8\'af
\f0 )\
=>
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'cc
\f0  
\f1 \'ba\'af\'b0\'e6\'b5\'c7\'b4\'c2
\f0  
\f1 \'b0\'cd
\f0 \
=>
\f1 \'b1\'e2\'ba\'bb\'c7\'fc\'bf\'a1\'bc\'ad
\f0  boolean 
\f1 \'ba\'af\'bc\'f6\'bf\'a1\'b4\'c2
\f0  boolean 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c0\'cc\'bf\'dc\'bf\'a1\'b4\'c2
\f0  
\f1 \'c0\'fa\'c0\'e5\'c0\'bb
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'be\'f8\'b4\'d9
\f0 .\
=>
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba
\f0  byte < short < char < int < song < float < double 
\f1 \'bc\'f8\'c0\'b8\'b7\'ce
\f0  
\f1 \'c5\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'bc\'b3\'c1\'a4
\f0 \

\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'c5\'a9\'b1\'e2\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c5\'ab
\f0  
\f1 \'c5\'a9\'b1\'e2\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'ba
\f0  
\f1 \'b0\'a1\'b4\'c9\'c7\'cf\'c1\'f6\'b8\'b8
\f0  
\f1 \'c5\'ab
\f0  
\f1 \'c5\'a9\'b1\'e2\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'c5\'a9\'b1\'e2\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'be\'f8\'b4\'d9
\f0 .\
\
1)
\f1 \'c0\'da\'b5\'bf\'c7\'fc\'ba\'af\'c8\'af
\f0 \
=>
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'cc
\f0  
\f1 \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'b5\'c7\'b4\'c2
\f0  
\f1 \'b0\'cd
\f0 \
=> 
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'c5\'a9\'b1\'e2\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c5\'ab
\f0  
\f1 \'c5\'a9\'b1\'e2\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'b9\'df\'bb\'fd
\f0 \
     
\fs28 Double d = 10;  //double d = 10.0
\f1 \'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'b5\'c7\'bc\'ad
\f0  
\f1 \'bd\'c7\'c7\'e0\
\

\fs36 => \'c0\'db\'c0\'ba \'c5\'a9\'b1\'e2\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'c5\'ab \'c5\'a9\'b1\'e2\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bf\'ac\'bb\'ea(\'b0\'e8\'bb\'ea)\'c7\'d2 \'b6\'a7 \'c0\'db\'c0\'ba \'c5\'a9\'b1\'e2\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c5\'ab \'c5\'a9\'b1\'e2\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce \'ba\'af\'b0\'e6\'c7\'d8\'bc\'ad \'bc\'f6\'c7\'e0\'c7\'cf\'b0\'ed \'b0\'e1\'b0\'fa\'b5\'b5 \'b1\'d7 \'c5\'a9\'b1\'e2\'b7\'ce \'b8\'c2\'c3\'df\'be\'ee\'bc\'ad \'b8\'ae\'c5\'cf\'c7\'d1\'b4\'d9.\
    
\fs28  10 + 9.7  // 10.0 + 9.7 \'b7\'ce \'ba\'af\'b0\'e6\'c7\'d8\'bc\'ad \'b0\'e8\'bb\'ea
\f0\fs36 \
\
2)
\f1 \'b0\'ad\'c1\'a6\'c7\'fc\'ba\'af\'c8\'af
\f0 \
=> 
\f1 \'b0\'ad\'c1\'a6\'b7\'ce
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'cd
\f0  \
=> 
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b0\'e6\'bf\'ec\'b4\'c2
\f0  
\f1 \'bf\'f8\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  
\f1 \'be\'f2\'be\'ee\'b3\'bb\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d8\'bc\'ad
\f0  
\f1 \'b0\'ad\'c1\'a6
\f0  
\f1 \'c7\'fc
\f0  
\f1 \'ba\'af\'c8\'af\'c0\'bb
\f0  
\f1 \'c7\'cf\'b0\'ed
\f0  
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  
\f1 \'bf\'f8\'b7\'a1\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'b8\'b7\'ce
\f0  
\f1 \'b5\'c7\'b5\'b9\'b8\'ae\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d8\'bc\'ad
\f0  
\f1 \'b0\'ad\'c1\'a6
\f0  
\f1 \'c7\'fc\'ba\'af\'c8\'af\'c0\'bb
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
=> 
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b3\'a2\'b8\'ae\'b4\'c2
\f0  
\f1 \'c0\'fc\'ba\'ce
\f0  
\f1 \'b0\'ad\'c1\'a6
\f0  
\f1 \'c7\'fc
\f0  
\f1 \'ba\'af\'c8\'af\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9\'c7\'cf\'b4\'d9
\f0 .\
=> 
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  
\f1 \'bb\'f3\'bc\'d3\'b0\'fc\'b0\'e8\'c0\'cf
\f0  
\f1 \'b6\'a7\'b8\'b8
\f0  
\f1 \'c7\'fc\'ba\'af\'c8\'af\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9\'c7\'cf\'b4\'d9
\f0 .\
\
=>
\f1 \'b0\'ad\'c1\'a6\'c7\'fc\'ba\'af\'c8\'af\'b9\'e6\'b9\'fd
\f0 \
(
\f1 \'ba\'af\'b0\'e6\'c7\'d2
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 )
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0\fs24  \
\

\fs36 1)
\f1 \'c0\'da\'b9\'d9\'bf\'a1\'bc\'ad\'b4\'c2
\f0  
\f1 \cf2 \'b5\'bf\'c0\'cf\'c7\'d1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c5\'b8\'c0\'d4\'b3\'a2\'b8\'ae
\f0  
\f1 \'bf\'ac\'bb\'ea\cf0 \'c0\'bb
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b5\'b5
\f0  
\f1 \'bf\'ac\'bb\'ea\'c7\'d1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'c5\'b8\'c0\'d4\'c0\'b8\'b7\'ce
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee\'c1\'f8\'b4\'d9
\f0 .\
10 / 3 : 3\
(double)10 / 3 : 3.3333333\'85.\
\
2)
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'b0\'f8\'c7\'d8\'bc\'ad
\f0  
\f1 \'bf\'f8\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  
\f1 \'b8\'b8\'b5\'e9\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9
\f0 .\
=>
\f1 \'bd\'c7\'bc\'f6\'b7\'ce
\f0  
\f1 \'b3\'aa\'bf\'c2
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  
\f1 \'c1\'a4\'bc\'f6\'b7\'ce
\f0  
\f1 \'ba\'af\'c8\'af\'c7\'d8\'bc\'ad
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \
=>
\f1 \'bd\'c7\'bc\'f6\'b8\'a6
\f0  
\f1 \'c1\'a4\'bc\'f6\'b7\'ce
\f0  
\f1 \'ba\'af\'c8\'af\'c7\'cf\'b8\'e9
\f0  
\f1 \'bc\'d2\'bc\'f6\'b4\'c2
\f0  
\f1 \'b9\'f6\'b7\'c1\'c1\'f8\'b4\'d9
\f0 .\
    7.8976;  // (int)7.8976. -> 7  (
\f1 \'b9\'ab\'c1\'b6\'b0\'c7
\f0  
\f1 \'b9\'f6\'b8\'b2
\f0 )\
    (int)(7.8976 + 0.5) -> 8 (
\f1 \'b9\'dd\'bf\'c3\'b8\'b2
\f0 )\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97-----\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf3 //\'c0\'da\'b9\'d9\'bf\'a1\'bc\'ad\'b4\'c2
\f0  
\f1 \'b5\'bf\'c0\'cf\'c7\'d1
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b3\'a2\'b8\'ae
\f0  
\f1 \'bf\'ac\'bb\'ea\'c7\'cf\'b8\'e9
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b5\'b5
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d1
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'b8\'b7\'ce
\f0  
\f1 \'b8\'ae\'c5\'cf\'b5\'cb\'b4\'cf\'b4\'d9
\f0 .\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 System.
\f3\i\b out
\f0\i0\b0 .println(5/3);\cf3  // 
\f1 \'c1\'a4\'bc\'f6\'b3\'aa\'b4\'a9\'b1\'e2
\f0  
\f1 \'c1\'a4\'bc\'f6\'b4\'c2
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0 :1\

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  : 1\cf3 \
\
//
\f1 \'bc\'d2\'bc\'f6\'b1\'ee\'c1\'f6
\f0  
\f1 \'b3\'aa\'bf\'c0\'b5\'b5\'b7\'cf
\f0  
\f1 \'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  2
\f1 \'b0\'b3
\f0  
\f1 \'c1\'df\'bf\'a1
\f0  
\f1 \'c7\'cf\'b3\'aa\'b8\'a6
\f0  
\f1 \'bd\'c7\'b7\'ce
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee
\f0  
\f1 \'c1\'d6\'be\'ee\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
\cf0 System.
\f3\i\b out
\f0\i0\b0 .println((
\f2\b double
\f0\b0 )5/3);\cf3  //
\f1 \'bd\'c7\'bc\'f6
\f0  
\f1 \'b3\'aa\'b4\'a9\'b1\'e2
\f0  
\f1 \'c1\'a4\'bc\'f6\'b4\'c2
\f0  
\f1 \'bd\'c7
\f0 \

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  : 1.6666666666666667
\fs24 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 **
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
=>
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba
\f0  String.  \
     
\f1 \cf3 String \'ba\'af\'bc\'f6\'b8\'ed = \'a1\'b0\'c0\'fa\'c0\'e5\'c7\'d2 \'b9\'ae\'c0\'da\'bf\'ad\'a1\'b1 ;
\f0 \cf0 \
=>
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba
\f0  
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ce\'b5\'a5
\f0  
\f1 \'b4\'d9\'b8\'a5
\f0  
\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'b0\'fa
\f0  
\f1 \'b4\'d9\'b8\'a3\'b0\'d4
\f0  \'93
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0 \'94 
\f1 \'c0\'c7
\f0  
\f1 \'c7\'fc\'bd\'c4\'c0\'b8\'b7\'ce
\f0  
\f1 \'b4\'eb\'c0\'d4\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \
=>
\f1 \'c3\'e2\'b7\'c2\'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0  
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'c0\'cc\'b8\'a7\'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'cc
\f0  
\f1 \'c3\'e2\'b7\'c2\'b5\'c8\'b4\'d9
\f0 .\

\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0  
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'c0\'cc\'b8\'a7\'c0\'bb
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2
\f0  
\f1 \'c7\'d4\'bc\'f6\'bf\'a1
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  \cf3 toString()\cf0  
\f1 \'c0\'cc
\f0  
\f1 \'c8\'a3\'c3\'e2\'b5\'c7\'bc\'ad
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d1
\f0  
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'cc
\f0  
\f1 \'c3\'e2\'b7\'c2\'b5\'ca\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs28 \cf0 [\'b9\'ae\'c0\'da\'bf\'ad\'bf\'b9\'b9\'ae]
\fs36 -
\fs28 \'c0\'cc\'b8\'a7, \'c1\'d6\'bc\'d2, \'c0\'fc\'c8\'ad\'b9\'f8\'c8\'a3, \'b3\'aa\'c0\'cc\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d8\'bc\'ad \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0 String name = "
\f1 \'b9\'da\'bf\'b5\'c8\'f1
\f0 ";\
String address = "
\f1 \'bc\'ad\'bf\'ef\'bd\'c3
\f0  
\f1 \'c1\'be\'b7\'ce\'b1\'b8
\f0 ";\
String phone = "0109756232";  // 
\f1 \'b8\'c7\'be\'d5\'c0\'cc
\f0  0
\f1 \'c0\'b8\'b7\'ce
\f0  
\f1 \'bd\'c3\'c0\'db\'c7\'cf\'b9\'c7\'b7\'ce
\f0  int
\f1 \'b0\'a1
\f0  
\f1 \'be\'c6\'b4\'cf\'b6\'f3
\f0  
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 int
\f0\b0  age = 30;\
System.
\f3\i\b out
\f0\i0\b0 .println("name: "+name);\
System.
\f3\i\b out
\f0\i0\b0 .println("address: "+address);\
System.
\f3\i\b out
\f0\i0\b0 .println("phone: "+phone);\
System.
\f3\i\b out
\f0\i0\b0 .println("age: "+age);
\f1\fs28 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf3 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97-----\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs36 \cf3 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0 \cf0 **System.out.printf\
=>	
\f1 \'bc\'ad\'bd\'c4\'bf\'a1
\f0  
\f1 \'b8\'c2\'c3\'e7\'bc\'ad
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'c4\'dc\'bc\'d6\'bf\'a1
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2
\f0  
\f1 \'b8\'de\'bc\'d2\'b5\'e5
\f0 \
=> 
\f1 \'bc\'ad\'bd\'c4\'c0\'ba
\f0  % 
\f1 \'b4\'d9\'c0\'bd\'bf\'a1
\f0  
\f1 \'bc\'fd\'c0\'da\'bf\'cd
\f0  
\f1 \'c7\'cf\'b3\'aa\'c0\'c7
\f0  
\f1 \'bf\'b5\'b9\'ae\'c0\'da\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'bc\'b3\'c1\'a4
\f0 \
      
\f1 \'bc\'fd\'c0\'da\'b4\'c2
\f0  
\f1 \'bb\'fd\'b7\'ab\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 System.out.printf(\'93
\f1 \'b8\'de\'bc\'bc\'c1\'f6
\f0  %
\f1 \'bc\'ad\'bd\'c4\'b9\'ae\'c0\'da
\f0 \'94,
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b3\'aa\'bf\'ad
\f0 );\
=>
\f1 \'bc\'ad\'bd\'c4\'b0\'b3\'bc\'f6\'b8\'b8\'c5\'ad
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b3\'aa\'bf\'ad
\f0 \
\
%d : 
\f1 \'c1\'a4\'bc\'f6
\f0 \
%f : float
\f1 \'c7\'fc
\f0  
\f1 \'bd\'c7\'bc\'f6\'c3\'e2\'b7\'c2
\f0 \
%lf : double
\f1 \'c7\'fc
\f0  
\f1 \'bd\'c7\'bc\'f6\'c3\'e2\'b7\'c2
\f0 \
%c : char 
\f1 \'c3\'e2\'b7\'c2
\f0 \
%s : 
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
%b : boolean 
\f1 \'c3\'e2\'b7\'c2
\f0 \
\
=>
\f1 \'bc\'ad\'bd\'c4\'b9\'ae\'c0\'da
\f0  
\f1 \'be\'d5\'bf\'a1
\f0  
\f1 \'c1\'a4\'bc\'f6\'b8\'a6
\f0  
\f1 \'b1\'e2\'c0\'e7\'c7\'cf\'b8\'e9
\f0  
\f1 \'c1\'a4\'bc\'f6\'b8\'b8\'c5\'ad
\f0  
\f1 \'c0\'da\'b8\'b4\'bc\'f6\'b8\'a6
\f0  
\f1 \'c8\'ae\'ba\'b8\'c7\'d8\'bc\'ad
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \

\f1 \'c0\'da\'b8\'b4\'bc\'f6\'b8\'a6
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'b8\'b4\'d9
\f0  
\f1 \'c0\'db\'b0\'d4
\f0  
\f1 \'b1\'e2\'c0\'e7\'c7\'cf\'b8\'e9
\f0  
\f1 \'bf\'f8\'b7\'a1\'c5\'a9\'b1\'e2\'b8\'b8\'c5\'ad
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \

\f1 \'bd\'c7\'bc\'f6\'b4\'c2
\f0  
\f1 \'c0\'fc\'c3\'bc\'c0\'da\'b8\'b4\'bc\'f6
\f0 .
\f1 \'bc\'d2\'bc\'f6\'c0\'da\'b8\'b4\'bc\'f6\'b8\'a6
\f0  
\f1 \'b1\'e2\'c0\'e7\'c7\'cf\'b8\'e9
\f0  
\f1 \'bc\'d2\'bc\'f6
\f0  
\f1 \'c0\'da\'b8\'b4\'bc\'f6\'b8\'b8\'c5\'ad
\f0  
\f1 \'bc\'d2\'bc\'f6\'b8\'a6
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2\'b5\'a5
\f0  
\f1 \'c0\'cc
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bc\'d2\'bc\'f6
\f0  
\f1 \'c0\'da\'b8\'ae
\f0  
\f1 \'b9\'d8\'bf\'a1\'bc\'ad
\f0  
\f1 \'b9\'dd\'bf\'c3\'b8\'b2
\f0\fs24 \
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\fs28 \cf0 [
\f0\fs36 printf
\f1\fs28 \'bf\'b9\'b9\'ae1]
\fs36 -
\fs28 \'c0\'cc\'b8\'a7, \'c1\'d6\'bc\'d2, \'c0\'fc\'c8\'ad\'b9\'f8\'c8\'a3, \'b3\'aa\'c0\'cc\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d8\'bc\'ad \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0 String name = "
\f1 \'b9\'da\'bf\'b5\'c8\'f1
\f0 ";\
String address = "
\f1 \'bc\'ad\'bf\'ef\'bd\'c3
\f0  
\f1 \'c1\'be\'b7\'ce\'b1\'b8
\f0 ";\
String phone = "0109756232";  // 
\f1 \'b8\'c7\'be\'d5\'c0\'cc
\f0  0
\f1 \'c0\'b8\'b7\'ce
\f0  
\f1 \'bd\'c3\'c0\'db\'c7\'cf\'b9\'c7\'b7\'ce
\f0  int
\f1 \'b0\'a1
\f0  
\f1 \'be\'c6\'b4\'cf\'b6\'f3
\f0  
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 int
\f0\b0  age = 30;\
System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c0\'cc\'b8\'a7
\f0 : %s 
\f1 \'c1\'d6\'bc\'d2
\f0 :%s 
\f1 \'c0\'fc\'c8\'ad\'b9\'f8\'c8\'a3
\f0 :%s 
\f1 \'b3\'aa\'c0\'cc
\f0 :%d\\n",\
    		name, address, phone, age);
\f1\fs28 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :     
\f1 \'c0\'cc\'b8\'a7
\f0 : 
\f1 \'b9\'da\'bf\'b5\'c8\'f1
\f0  
\f1 \'c1\'d6\'bc\'d2
\f0 :
\f1 \'bc\'ad\'bf\'ef\'bd\'c3
\f0  
\f1 \'c1\'be\'b7\'ce\'b1\'b8
\f0  
\f1 \'c0\'fc\'c8\'ad\'b9\'f8\'c8\'a3
\f0 :0109756232 
\f1 \'b3\'aa\'c0\'cc
\f0 :30\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f1\fs28 \cf0 [
\f0\fs36 printf
\f1\fs28 \'bf\'b9\'b9\'ae2]
\f0\fs24 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 System.
\f3\i\b out
\f0\i0\b0 .printf("\cf3 %f\\n\cf0 " , 8.98765432132); //
\f1 \'bc\'d2\'bc\'f6
\f0  6
\f1 \'c2\'b0
\f0  
\f1 \'c0\'da\'b8\'ae\'b1\'ee\'c1\'f6
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \

\f1 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :   8.987654\
\
System.
\f3\i\b out
\f0\i0\b0 .printf("\cf3 %.2f\\n\cf0 " , 8.98765432132); //
\f1 \'bc\'d2\'bc\'f6
\f0 2
\f1 \'c2\'b0
\f0  
\f1 \'c0\'da\'b8\'ae\'b1\'ee\'c1\'f6
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0  - 3
\f1 \'c2\'b0\'c0\'da\'b8\'ae\'bf\'a1\'bc\'ad
\f0  
\f1 \'b9\'dd\'bf\'c3\'b8\'b2
\f0  \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :   8.99\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 **
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 (Operator)\
=>
\f1 \'b0\'e8\'bb\'ea\'c0\'bb
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d8\'c1\'d6\'b4\'c2
\f0  
\f1 \'ba\'ce\'c8\'a3\'b3\'aa
\f0  
\f1 \'b8\'ed\'b7\'c9\'be\'ee
\f0 \
1.
\f1 \'bf\'ac\'bb\'ea\'c0\'da\'c0\'c7\'ba\'d0\'b7\'f9
\f0 \
1)
\f1 \'c7\'c7\'bf\'ac\'bb\'ea\'c0\'da\'c0\'c7
\f0  
\f1 \'b0\'b3\'bc\'f6\'bf\'a1
\f0  
\f1 \'b5\'fb\'b8\'a5
\f0  
\f1 \'ba\'d0\'b7\'f9
\f0 \
=> 
\f1 \'b4\'dc\'c7\'d7
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  : 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  1
\f1 \'b0\'b3\'b8\'e9
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  -unary\
=> 
\f1 \'c0\'cc\'c7\'d7
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  : 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  2
\f1 \'b0\'b3\'b8\'e9
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  -binary\
=> 
\f1 \'bb\'ef\'c7\'d7
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  : 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  3
\f1 \'b0\'b3\'b8\'e9
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0\fs24 \

\fs36 2)
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'bf\'a1
\f0  
\f1 \'b5\'fb\'b8\'a5
\f0  
\f1 \'ba\'d0
\f0 \
=>
\f1 \'bb\'ea\'bc\'fa\'bf\'ac\'bb\'ea
\f0  : 
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  
\f1 \'bc\'fd\'c0\'da\'c0\'ce
\f0  
\f1 \'bf\'ac\'bb\'ea
\f0 \
=>
\f1 \'b3\'ed\'b8\'ae\'bf\'ac\'bb\'ea
\f0  : 
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  boolean 
\f1 \'c0\'ce
\f0  
\f1 \'bf\'ac\'bb\'ea
\f0 \
\
2.
\f1 \'c3\'d6\'bf\'ec\'bc\'b1
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
1)() :
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7\'b8\'a6
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d1
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
2)[] :
\f1 \'b9\'e8\'bf\'ad\'bf\'a1\'bc\'ad
\f0  
\f1 \'c0\'ce\'b5\'a6\'bd\'ba\'b3\'aa
\f0  
\f1 \'c5\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'bc\'b3\'c1\'a4\'c7\'cf\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
3). :
\f1 \'b0\'b4\'c3\'bc\'b0\'a1
\f0  
\f1 \'c0\'da\'bd\'c5\'c0\'c7
\f0  
\f1 \'b8\'e2\'b9\'f6\'b8\'a6
\f0  
\f1 \'c8\'a3\'c3\'e2\'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
\
3.
\f1 \'b4\'dc\'c7\'d7
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=>
\f1 \'c3\'d6\'bf\'ec\'bc\'b1
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  
\f1 \'b4\'d9\'c0\'bd\'c0\'b8\'b7\'ce
\f0  
\f1 \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7\'b0\'a1
\f0  
\f1 \'b3\'f4\'b4\'d9
\f0 .\
1)~ : 1
\f1 \'c0\'c7
\f0  
\f1 \'ba\'b8\'bc\'f6\'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'d8\'c1\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
0 => 1 , 1 => 0 
\f1 \'c0\'b8\'b7\'ce
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  
\f1 \'c1\'a4\'bc\'f6\'b7\'ce
\f0  
\f1 \'b8\'ae\'c5\'cf\'c7\'cf\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \

\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1\'bc\'ad\'b8\'b8
\f0  
\f1 \'bb\'e7\'bf\'eb\'b0\'a1\'b4\'c9
\f0 \
\

\f1 \'be\'e7\'bc\'f6\'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'c0\'bd\'bc\'f6\'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'b5\'c7\'b0\'ed
\f0  
\f1 \'c0\'fd\'b4\'eb\'b0\'aa\'c0\'cc
\f0  1
\f1 \'c0\'cc
\f0  
\f1 \'c1\'f5\'b0\'a1
\f0 \

\f1 \'c0\'bd\'bc\'f6\'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'be\'e7\'bc\'f6\'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'b5\'c7\'b0\'ed
\f0  
\f1 \'c0\'fd\'b4\'eb\'b0\'aa\'c0\'cc
\f0  1
\f1 \'c0\'cc
\f0  
\f1 \'b0\'a8\'bc\'d2
\f0  \
\

\f1 \'bf\'eb\'b5\'b5
\f0  : 
\f1 \'c0\'cc\'b9\'cc\'c1\'f6
\f0  
\f1 \'c3\'b3\'b8\'ae\'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'f6\'bb\'f3
\f0  
\f1 \'b9\'dd\'c0\'fc\'bf\'a1
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9
\f0 .\
\
2)!\
=>boolean 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1\'b8\'b8
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2\'b5\'a5
\f0  \
True -> false, false -> true
\f1 \'b7\'ce
\f0  
\f1 \'b8\'ae\'c5\'cf\'c7\'d8\'c1\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
\
3)
\f1 \'ba\'ce\'c8\'a3
\f0  +,-\
=> 
\f1 \'bc\'fd\'c0\'da\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'ba\'ce\'c8\'a3
\f0 \
=> -
\f1 \'b4\'c2
\f0  2
\f1 \'c0\'c7
\f0  
\f1 \'ba\'b8\'bc\'f6\'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'d8\'c1\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=>
\f1 \'c4\'c4\'c7\'bb\'c5\'cd\'b4\'c2
\f0  2
\f1 \'c0\'c7
\f0  
\f1 \'ba\'b8\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'c0\'bd\'bc\'f6\'b8\'a6
\f0  
\f1 \'c7\'a5\'c7\'f6
\f0 \
\
4)
\f1 \'c1\'f5\'b0\'a8\'bf\'ac\'bb\'ea\'c0\'da
\f0 \
++, \'97\
=>
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1\'b8\'b8
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=>++
\f1 \'b4\'c2
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'ba\'af\'bc\'f6\'c0\'c7
\f0  
\f1 \'b0\'aa\'c0\'bb
\f0  1
\f1 \'c1\'f5\'b0\'a1
\f0  
\f1 \'bd\'c3\'c4\'d1\'c1\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
      \'97
\f1 \'b4\'c2
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'ba\'af\'bc\'f6\'c0\'c7
\f0  
\f1 \'b0\'aa\'c0\'bb
\f0  1
\f1 \'b0\'a8\'bc\'d2
\f0  
\f1 \'bd\'c3\'c4\'d1\'c1\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=> ++
\f1 \'b3\'aa
\f0  \'97
\f1 \'b8\'a6
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'be\'d5\'bf\'a1
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'c1\'f5\'b0\'a8\'c0\'bb
\f0  
\f1 \'b8\'d5\'c0\'fa\'c7\'cf\'b0\'ed
\f0  
\f1 \'b8\'ed\'b7\'c9\'b9\'ae\'bf\'a1
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \
      ++
\f1 \'b3\'aa
\f0  \'97
\f1 \'b8\'a6
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'b5\'da\'bf\'a1
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9
\f0  
\f1 \'b8\'ed\'b7\'c9\'b9\'ae\'bf\'a1
\f0  
\f1 \'ba\'af\'bc\'f6\'c0\'c7
\f0  
\f1 \'b0\'aa\'c0\'bb
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b0\'ed
\f0  
\f1 \'c1\'f5\'b0\'a8\'c0\'bb
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\
\
4.
\f1 \'bb\'ea\'bc\'fa\'bf\'ac\'bb\'ea\'c0\'da
\f0 \
1)+\
=>
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b3\'a2\'b8\'ae\'b4\'c2
\f0  + 
\f1 \'bf\'ac\'bb\'ea
\f0 \
=>String
\f1 \'b3\'a2\'b8\'ae
\f0  + 
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  
\f1 \'b0\'e1\'c7\'d5\'c0\'bb
\f0  
\f1 \'c7\'cf\'b0\'ed
\f0  String
\f1 \'b0\'fa
\f0  
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  + 
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  
\f1 \'bf\'aa\'bd\'c3
\f0  
\f1 \'b0\'e1\'c7\'d5\'c0\'cc\'b4\'d9
\f0 .\
  \'933+4= \'94 + 3+4   ==>> 3+4=34\
  \'933+4= \'94 +(3+4) ==>> 3+4=7\
2)-\
3)*\
4)/\
5)% : 
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1\'bc\'ad\'b8\'b8
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da\'b7\'ce
\f0  
\f1 \'b3\'aa\'b8\'d3\'c1\'f6\'b8\'a6
\f0  
\f1 \'b1\'b8\'c7\'d8\'c1\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=>
\f1 \'c1\'d6\'b1\'e2\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'b9\'dd\'ba\'b9\'c7\'cf\'b4\'c2
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'bb
\f0  
\f1 \'b8\'b8\'b5\'e9
\f0  
\f1 \'b6\'a7
\f0  %
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs28 \cf0 [%
\f1 \'bf\'b9\'b9\'ae1
\f0 ]-
\f1 \'bb\'a1\'b0\'ad
\f0 , 
\f1 \'c6\'c4\'b6\'fb
\f0 , 
\f1 \'b3\'eb\'b6\'fb\'c0\'bb
\f0  1
\f1 \'c3\'ca\'b5\'bf\'be\'c8
\f0  
\f1 \'b9\'dd\'ba\'b9\'c7\'d4
\f0\fs36 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b\fs24 \cf0 int
\f0\b0  n = 0;\
     
\f2\b while
\f0\b0 (
\f2\b true
\f0\b0 ) \{   //
\f1 \'b9\'ab\'c7\'d1
\f0 \
	
\f2\b try
\f0\b0  \{\
		
\f2\b if
\f0\b0 (n % 3 ==0)\
			System.
\f3\i\b out
\f0\i0\b0 .println(\'93
\f1 \'bb\'a1\'b0\'ad
\f0 \'94);\
		
\f2\b if
\f0\b0 (n % 3 ==1)\
			System.
\f3\i\b out
\f0\i0\b0 .println(\'93
\f1 \'c6\'c4\'b6\'fb
\f0 \'94);\
		
\f2\b if
\f0\b0 (n % 3 ==2)\
			System.
\f3\i\b out
\f0\i0\b0 .println(\'93
\f1 \'b3\'eb\'b6\'fb
\f0 \'94);\
		n++;\
		Thread.
\f4\i sleep
\f0\i0 (1000);  //1
\f1 \'c3\'ca\'be\'bf
\f0  
\f1 \'b9\'dd\'ba\'b9
\f0 \
	\}
\f2\b catch
\f0\b0 (Exception e) \{\}
\fs36 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs28 \cf0 [%
\f1 \'bf\'b9\'b9\'ae2
\f0 ]
\fs36 \

\fs28 int count = 101; //
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 \
int page = 10 //
\f1 \'c7\'d1
\f0  
\f1 \'c6\'e4\'c0\'cc\'c1\'f6\'bf\'a1
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'d2
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd
\f0  
\f1 \'b0\'b3\'bc\'f6
\f0 \
\
//count
\f1 \'b4\'c2
\f0  
\f1 \'b8\'ee
\f0  
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'c6\'e4\'c0\'cc\'c1\'f6\'bf\'a1
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
count % page == 0 : count / page\
count % page != 0 : count / page + 1\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 \
\

\f1 \'bb\'ea\'bc\'fa\'bf\'ac\'bb\'ea\'bd\'c3
\f0  
\f1 \'c1\'d6\'c0\'c7\'c7\'d2
\f0  
\f1 \'c1\'a1
\f0 \
=>
\f1 \'bb\'ea\'bc\'fa\'bf\'ac\'bb\'ea\'c0\'ba
\f0  	int 
\f1 \'ba\'b8\'b4\'d9
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'bf\'ac\'bb\'ea\'c7\'cf\'b8\'e9
\f0  int
\f1 \'b7\'ce
\f0  
\f1 \'ba\'af\'c8\'af\'c7\'d8\'bc\'ad
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\uc0\u8232 
\fs24 	       
\f2\b byte
\f0\b0  a = 10;\
		
\f2\b byte
\f0\b0  b = 7;\
		//byte + byte 
\f1 \'c0\'cc\'c1\'f6\'b8\'b8
\f0  
\f1 \'c0\'da\'b9\'d9\'b4\'c2
\f0  \ul int\ulnone  
\f1 \'ba\'b8\'b4\'d9
\f0  
\f1 \'c5\'a9\'b1\'e2\'b0\'a1
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  \
		//
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'cf\'b8\'e9
\f0  \ul int
\f1 \ulnone \'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'d8\'bc\'ad
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d1\'b4\'d9
\f0 .\
	\
		
\f2\b byte
\f0\b0  x = \ul a + b\ulnone ;  //->  \ul int\ulnone  x = a+b;\
		                          // ->  byte x = (byte)(a+b);\
		//
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  byte
\f1 \'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  
\f1 \'c7\'fc\'ba\'af\'c8\'af\'c7\'d8\'bc\'ad
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'d8\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .
\fs36 \
\
\
=>
\f1 \'c1\'a4\'bc\'f6
\f0 /
\f1 \'c1\'a4\'bc\'f6
\f0 =
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'c0\'cc\'b4\'d9
\f0 .\
=>
\f1 \'bd\'c7\'bc\'f6\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'bb\'ea\'bc\'fa\'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0  
\f1 \'c1\'a4\'c8\'ae\'c7\'cf\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'ba
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  
\f1 \'b8\'b8\'b5\'e9\'be\'ee
\f0  
\f1 \'c1\'fa
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\

\f1 \'c1\'a4\'bc\'f6
\f0 /0
\f1 \'c0\'ba
\f0  
\f1 \'bf\'b9\'bf\'dc\'b8\'a6
\f0  
\f1 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b0\'c1\'f6\'b8\'b8
\f0  
\f1 \'bd\'c7\'bc\'f6
\f0 /0
\f1 \'c0\'ba
\f0  
\f1 \'bf\'b9\'bf\'dc\'b0\'a1
\f0  
\f1 \'be\'c6\'b4\'cf\'b0\'ed
\f0  	NaN
\f1 \'c0\'cc
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\

\f1 \'b3\'aa\'b4\'a9\'b1\'e2\'b8\'a6
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'b3\'aa\'b4\'a9\'b4\'c2
\f0  
\f1 \'bc\'f6\'b0\'a1
\f0  0
\f1 \'c0\'ce\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'cf\'b0\'ed
\f0  
\f1 \'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'cd\'c0\'cc
\f0  
\f1 \'c1\'c1\'b4\'d9
\f0 .\
\
5.shift 
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs26 \cf0 10
\f1 \'c1\'f8\'bc\'f6
\f0  23
\f1 \'c0\'ba
\f0  
\f1 \'c4\'c4\'c7\'bb\'c5\'cd\'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5\'b5\'c9
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'be\'c6\'b7\'a1\'c3\'b3\'b7\'b3
\f0  
\f1 \'c0\'fa\'c0\'e5\'b5\'cb\'b4\'cf\'b4\'d9
\f0 .\
\pard\pardeftab560\slleading20\partightenfactor0
\cf3 0\cf0 0000000 00000000 00000000 00010111\
==>
\f1 \'c0\'cc
\f0  
\f1 \'bc\'fd\'c0\'da
\f0  
\f1 \'c6\'d0\'c5\'cf\'c0\'bb
\f0  
\f1 \'bf\'de\'c2\'ca\'c0\'b8\'b7\'ce
\f0  
\f1 \'c7\'d1
\f0  
\f1 \'b9\'f8
\f0  
\f1 \'b9\'d0\'b8\'e9
\f0 \
0000000 00000000 00000000 00010111\cf3 0
\fs36 \cf0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\fs24 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 =>
\f1 \'c1\'a4\'bc\'f6
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'b8
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da\'b7\'ce
\f0  
\f1 \'ba\'f1\'c6\'ae
\f0  
\f1 \'b4\'dc\'c0\'a7\'b7\'ce
\f0  
\f1 \'bf\'de\'c2\'ca\'c0\'cc\'b3\'aa
\f0  
\f1 \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'b8\'b7\'ce
\f0  
\f1 \'b9\'d0\'be\'ee\'b3\'bb\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
1)<<\

\f1 \'c1\'a4\'bc\'f6
\f0 1<<
\f1 \'c1\'a4\'bc\'f6
\f0 2 : 
\f1 \'c1\'a4\'bc\'f6
\f0 1
\f1 \'c0\'bb
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0  2
\f1 \'b8\'b8\'c5\'ad
\f0  
\f1 \'bf\'de\'c2\'ca\'c0\'b8\'b7\'ce
\f0  shift \

\f1 \'c0\'cc\'b6\'a7
\f0  
\f1 \'ba\'ce\'c8\'a3\'b8\'a6
\f0  
\f1 \'c0\'af\'c1\'f6\'c7\'cf\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d8\'bc\'ad
\f0  
\f1 \'c3\'b9\'b9\'f8\'c2\'b0
\f0  
\f1 \'ba\'f1\'c6\'ae\'b4\'c2
\f0  
\f1 \'c1\'a6\'bf\'dc
\f0 \
10 << 1 : 20\
10 << 2 : 40\
10 << 3 : 80\
\
2)>>\

\f1 \'c1\'a4\'bc\'f6
\f0 1 >> 
\f1 \'c1\'a4\'bc\'f6
\f0 2 :
\f1 \'c1\'a4\'bc\'f6
\f0 1
\f1 \'c0\'bb
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0 2
\f1 \'b8\'b8\'c5\'ad
\f0  
\f1 \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'b8\'b7\'ce
\f0  shift \

\f1 \'ba\'ce\'c8\'a3\'b8\'a6
\f0  
\f1 \'c0\'af\'c1\'f6\'c7\'cf\'b1\'e2
\f0  
\f1 \'c0\'a7\'c7\'d8\'bc\'ad
\f0  
\f1 \'c3\'b9\'b9\'f8\'c2\'b0
\f0  
\f1 \'ba\'f1\'c6\'ae\'b4\'c2
\f0  
\f1 \'c1\'a6\'bf\'dc
\f0 \
14 >> 1 : 7\
14 >> 2 : 3\
14 >> 3 : 1
\fs24 \
\

\fs36 3)>>>\

\f1 \'c1\'a4\'bc\'f6
\f0 1>>>
\f1 \'c1\'a4\'bc\'f6
\f0 2 : 
\f1 \'c1\'a4\'bc\'f6
\f0 1
\f1 \'c0\'bb
\f0  
\f1 \'c1\'a4\'bc\'f6
\f0 2
\f1 \'b8\'b8\'c5\'ad
\f0  
\f1 \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'b8\'b7\'ce
\f0  shift \

\f1 \'ba\'ce\'c8\'a3\'bf\'a1
\f0  
\f1 \'bb\'f3\'b0\'fc\'be\'f8\'c0\'cc
\f0  
\f1 \'b9\'ab\'c1\'b6\'b0\'c7
\f0  
\f1 \'b9\'d0\'b0\'ed
\f0  
\f1 \'bf\'de\'c2\'ca\'bf\'a1
\f0  0
\f1 \'c0\'bb
\f0  
\f1 \'bb\'f0\'c0\'d4
\f0 \

\f1 \'c0\'bd\'bc\'f6\'b8\'a6
\f0  >>> 
\f1 \'c7\'cf\'b8\'e9
\f0  
\f1 \'be\'e7\'bc\'f6\'b0\'a1
\f0  
\f1 \'b5\'c8\'b4\'d9
\f0 .\
\

\f1 \'c0\'cc
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da\'b5\'e9\'c0\'ba
\f0  
\f1 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'bf\'a1\'bc\'ad\'b4\'c2
\f0  
\f1 \'c0\'df
\f0  
\f1 \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6
\f0  
\f1 \'be\'ca\'b0\'ed
\f0  
\f1 \'bd\'c3\'bd\'ba\'c5\'db
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'bf\'a1\'bc\'ad
\f0  
\f1 \'b8\'b9\'c0\'cc
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \

\f1 \'c4\'c4\'c7\'bb\'c5\'cd\'b4\'c2
\f0  
\f1 \'b0\'f6\'bc\'c0\'c0\'bb
\f0  
\f1 \'bf\'de\'c2\'ca
\f0  shift  
\f1 \'bf\'cd
\f0  
\f1 \'b4\'f5\'c7\'cf\'b1\'e2\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'cf\'b0\'ed
\f0  
\f1 \'b3\'aa\'b4\'b0\'bc\'c0\'c0\'ba
\f0  
\f1 \'bf\'c0\'b8\'a5\'c2\'ca
\f0  shift 
\f1 \'bf\'cd
\f0  
\f1 \'bb\'ac\'bc\'c0\'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb
\f0 \
\
6.
\f1 \'b0\'fc\'b0\'e8\'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=>
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  boolean	\
=>   >,>=,<,<=\
=>  ==(
\f1 \'b0\'b0\'b4\'d9
\f0 ), !=(
\f1 \'b4\'d9\'b8\'a3\'b4\'d9
\f0 )\
=>
\f1 \'bd\'c7\'bc\'f6\'b8\'a6
\f0  == 
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'ba\'f1\'b1\'b3\'c7\'d2
\f0  
\f1 \'b6\'a7\'b4\'c2
\f0  
\f1 \'c1\'d6\'c0\'c7\'c7\'d8\'be\'df
\f0  
\f1 \'c7\'d1\'b4\'d9
\f0 .\

\f1 \'bd\'c7\'bc\'f6\'b4\'c2
\f0  
\f1 \'c1\'a4\'c8\'ae\'c7\'cf\'b0\'d4
\f0  
\f1 \'c7\'a5\'c7\'f6\'c7\'cf\'c1\'f6
\f0  
\f1 \'b8\'f8\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec\'b0\'a1
\f0  
\f1 \'c0\'d6\'b1\'e2
\f0  
\f1 \'b6\'a7\'b9\'ae\'bf\'a1
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  
\f1 \'b4\'d9\'b8\'a3\'b0\'d4
\f0  
\f1 \'b3\'aa\'bf\'c3\'bc\'f6\'b5\'b5
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\

\f1 \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'ba
\f0  ==
\f1 \'c0\'bb
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'ba\'f1\'b1\'b3\'c7\'cf\'b0\'d4
\f0  
\f1 \'b5\'c7\'b8\'e9
\f0  
\f1 \'b0\'a1\'b8\'ae\'c5\'b0\'b0\'ed
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  
\f1 \'c2\'fc\'c1\'b6\'b0\'a1
\f0  
\f1 \'b5\'bf\'c0\'cf\'c7\'d1
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1
\f0  true \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\fs24 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 [
\f1 \'bf\'b9\'b9\'ae
\f0 ]\
//>,>=,<,<=,==,!= 
\f1 \'c0\'ba
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  boolean\
    System.
\f3\i\b out
\f0\i0\b0 .println("10 > 3 :" + (10>3));\

\f1 \'b0\'e1\'b0\'fa\'b0\'aa
\f0 :    10 > 3 :true\
\
    //
\f1 \'bd\'c7\'bc\'f6
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa
\f0  
\f1 \'ba\'f1\'b1\'b3\'b4\'c2
\f0  
\f1 \'c1\'d6\'c0\'c7
\f0  \
    System.
\f3\i\b out
\f0\i0\b0 .println("(1-0.8)==0.2:" + ((1-0.8)==0.2));\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0 :    (1-0.8)==0.2:false\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 7.
\f1 \'c1\'b6\'b0\'c7 \'b3\'ed\'b8\'ae \'bf\'ac\'bb\'ea\'c0\'da\
Boolean \'b5\'a5\'c0\'cc\'c5\'cd\'b3\'a2\'b8\'ae \'bf\'ac\'bb\'ea\'c0\'bb \'c7\'d8\'bc\'ad \'b0\'e1\'b0\'fa\'b8\'a6 boolean\'c0\'b8\'b7\'ce \'b8\'ae\'c5\'cf\'c7\'cf\'b4\'c2 \'bf\'ac\'bb\'ea\'c0\'da\
=> && : and - \'b5\'d1\'b4\'d9 true \'c0\'ce \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 true, \'b1\'d7 \'c0\'cc\'bf\'dc\'c0\'c7 \'b0\'e6\'bf\'ec\'b4\'c2 false \
=> || : or - \'b5\'d1\'b4\'d9 false\'c0\'ce \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 false, \'b1\'d7 \'bf\'dc\'c0\'c7 \'b0\'e6\'bf\'ec\'b4\'c2 true\
=>and\'c0\'c7 \'b0\'e6\'bf\'ec\'b4\'c2 \'be\'d5\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 false\'c0\'cc\'b8\'e9 \'b0\'e1\'b0\'fa\'b4\'c2 \'b9\'ab\'c1\'b6\'b0\'c7 false\'b0\'a1 \'b5\'c7\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \
   \'be\'d5\'c0\'c7 \'b0\'e1\'b0\'fa\'b0\'a1 false\'c0\'cc\'b8\'e9 \'b5\'da\'c0\'c7 \'b0\'e1\'b0\'fa\'b8\'a6 \'c8\'ae\'c0\'ce\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bd\
   or\'c0\'c7 \'b0\'e6\'bf\'ec\'b4\'c2 \'be\'d5\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 true\'c0\'cc\'b8\'e9 \'b0\'e1\'b0\'fa\'b4\'c2 \'b9\'ab\'c1\'b6\'b0\'c7 true\'b0\'a1 \'b5\'c7\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1   \
   \'be\'d5\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 true\'c0\'cc\'b8\'e9 \'b5\'da\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'c8\'ae\'c0\'ce\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bd\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf0 \
[
\f1 \'bf\'b9\'b9\'ae
\f0 1]\
    
\f2\b int
\f0\b0  x = 10;  //	x
\f1 \'b0\'a1
\f0  4
\f1 \'c0\'c7
\f0  
\f1 \'b9\'e8\'bc\'f6\'c0\'cc\'b0\'c5\'b3\'aa
\f0  5
\f1 \'c0\'c7
\f0  
\f1 \'b9\'e8\'bc\'f6\'c0\'ce\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce
\f0 \
    
\f2\b boolean
\f0\b0  result = x % 4 == 0 || x % 5 ==0;\
    System.
\f3\i\b out
\f0\i0\b0 .println("result: "+result);\

\f1 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :  result: true    \
\
[
\f1 \'bf\'b9\'b9\'ae
\f0 2]\
    //year
\f1 \'bf\'a1\'b4\'c2
\f0  
\f1 \'b3\'e2\'b5\'b5\'b0\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
    
\f2\b int
\f0\b0  year = 2020;\
    //4
\f1 \'c0\'c7
\f0  
\f1 \'b9\'e8\'bc\'f6\'c0\'cc\'b0\'ed
\f0  100
\f1 \'c0\'c7
\f0  
\f1 \'b9\'e8\'bc\'f6\'b0\'a1
\f0  
\f1 \'be\'c6\'b4\'d1
\f0  
\f1 \'b0\'e6\'bf\'ec
\f0  
\f1 \'b6\'c7\'b4\'c2
\f0  400
\f1 \'c0\'c7
\f0  
\f1 \'b9\'e8\'bc\'f6\'c0\'ce
\f0  
\f1 \'b0\'e6\'bf\'ec\'b4\'c2
\f0  
\f1 \'c0\'b1\'b3\'e2
\f0 \
    result = year % 4 == 0 && year % 100 !=0 || year % 400 ==0;\
    System.
\f3\i\b out
\f0\i0\b0 .println("result: "+result);\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f1 \cf0 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :  result: true  \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 8.
\f1 \'ba\'f1\'c6\'ae
\f0  
\f1 \'b3\'ed\'b8\'ae
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=>
\f1 \'c1\'a4\'bc\'f6\'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  
\f1 \'b0\'a1\'c1\'f6\'b0\'ed
\f0  
\f1 \'ba\'f1\'c6\'ae
\f0  
\f1 \'b4\'dc\'c0\'a7\'b7\'ce
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'bb
\f0  
\f1 \'c7\'d8\'bc\'ad
\f0  
\f1 \'b0\'e1\'b0\'fa\'b8\'a6
\f0  10
\f1 \'c1\'f8
\f0  
\f1 \'c1\'a4\'bc\'f6\'b7\'ce
\f0  
\f1 \'b8\'ae\'c5\'cf\'c7\'cf\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
=> & : 
\f1 \'b5\'d1\'b4\'d9
\f0  1
\f1 \'c0\'cf\'b6\'a7\'b8\'b8
\f0  1
\f1 \'c0\'cc\'b0\'ed
\f0  
\f1 \'b3\'aa\'b8\'d3\'c1\'f6
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2
\f0  0\
=> | : 
\f1 \'b5\'d1\'b4\'d9
\f0  0
\f1 \'c0\'cf\'b6\'a7\'b8\'b8
\f0  0
\f1 \'c0\'cc\'b0\'ed
\f0  
\f1 \'b3\'aa\'b8\'d3\'c1\'f6
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2
\f0  1\
=>^ : XOR(Exclusive OR), 
\f1 \'b5\'ce
\f0  
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'b0\'b0\'c0\'b8\'b8\'e9
\f0  0 
\f1 \'b4\'d9\'b8\'a3\'b8\'e9
\f0  1\
=>
\f1 \'bd\'c3\'bd\'ba\'c5\'db
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'bf\'a1\'bc\'ad
\f0  
\f1 \'b8\'b9\'c0\'cc
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'cf\'b0\'ed
\f0  
\f1 \'c0\'cc\'b9\'cc\'c1\'f6
\f0  
\f1 \'c3\'b3\'b8\'ae
\f0  
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'bf\'a1\'bc\'ad\'b5\'b5
\f0  
\f1 \'b8\'b9\'c0\'cc
\f0  
\f1 \'bb\'e7\'bf\'eb\'c7\'d1\'b4\'d9
\f0 .\
\
\
9.
\f1 \'bb\'ef\'c7\'d7\'bf\'ac\'bb\'ea\'c0\'da
\f0 \
boolean
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'b6\'c7\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'bd\'c4
\f0  ? true
\f1 \'c0\'cf
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'b3\'bb\'bf\'eb
\f0  : false 
\f1 \'c0\'cf
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'b3\'bb\'bf\'eb
\f0 \
=> 
\f1 \'b8\'c7
\f0  
\f1 \'be\'d5\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'b3\'aa
\f0  
\f1 \'bf\'ac\'bb\'ea\'bd\'c4\'c0\'c7
\f0  
\f1 \'b0\'e1\'b0\'fa\'b0\'a1
\f0  true
\f1 \'c0\'cc\'b8\'e9
\f0  
\f1 \'b9\'d9\'b7\'ce
\f0  
\f1 \'b5\'da\'c0\'c7
\f0  
\f1 \'b3\'bb\'bf\'eb\'c0\'cc
\f0  
\f1 \'b3\'b2\'b0\'ed
\f0  false
\f1 \'c0\'cc\'b8\'e9
\f0  
\f1 \'b8\'b6\'c1\'f6\'b8\'b7
\f0  
\f1 \'b3\'bb\'bf\'eb\'c0\'cc
\f0  
\f1 \'b3\'b2\'b4\'c2\'b4\'d9
\f0 .\
\
a
\f1 \'bf\'cd
\f0  b 
\f1 \'c1\'df\'bf\'a1\'bc\'ad
\f0  
\f1 \'c5\'ab
\f0  
\f1 \'b0\'aa\'c0\'bb
\f0  max
\f1 \'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
max = a>b ? a:b;\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 [
\f1 \'bf\'b9\'b9\'ae
\f0 ]
\fs36 \

\fs24 //
\f1 \'b4\'d9\'c0\'bd
\f0  2
\f1 \'b0\'b3\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6
\f0  
\f1 \'c1\'df\'bf\'a1\'bc\'ad
\f0  
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b0\'aa\'c0\'bb
\f0  \ul min
\f1 \ulnone \'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2
\f0 \
	
\f2\b int
\f0\b0  n1 = 20;\
	
\f2\b int
\f0\b0  n2 = 30;\
	
\f2\b int
\f0\b0  min = n1 < n2 ? n1 : n2;\
	System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b0\'aa
\f0 : %d\\n", min);
\fs36 \

\f1\fs24 \'c3\'e2\'b7\'c2\'b0\'aa
\f0  :    
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'b0\'aa
\f0 : 20\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 10.
\f1 \'c7\'d2\'b4\'e7\'bf\'ac\'bb\'ea\'c0\'da
\f0 \
= : 
\f1 \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5\'b5\'c8
\f0  
\f1 \'c0\'a7\'c4\'a1\'b8\'a6
\f0  
\f1 \'bf\'de\'c2\'ca\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'eb\'c0\'d4
\f0 \

\f1 \'b0\'a1\'c0\'e5
\f0  
\f1 \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1
\f0  
\f1 \'bc\'f6\'c7\'e0
\f0 \
\
+= : 
\f1 \'bf\'de\'c2\'ca\'c0\'c7
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5\'b5\'c8
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd
\f0  
\f1 \'bf\'c0\'b8\'a5\'c2\'ca\'c0\'c7
\f0  
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6
\f0  +
\f1 \'c7\'d8\'bc\'ad
\f0  
\f1 \'bf\'de\'c2\'ca\'bf\'a1
\f0  
\f1 \'ba\'af\'bc\'f6\'bf\'a1
\f0  
\f1 \'b4\'eb\'c0\'d4\'c7\'cf\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da
\f0 \
i
\fs28 nt n = 10;\
n +=7;  // n = n+7;\

\fs36  \
+ 
\f1 \'b4\'eb\'bd\'c5\'bf\'a1
\f0  
\f1 \'b4\'d9\'b8\'a5
\f0  
\f1 \'bf\'ac\'bb\'ea\'c0\'da\'b5\'b5
\f0  
\f1 \'bb\'e7\'bf\'eb\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0\fs24 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0        [
\f1 \'bf\'b9\'b9\'ae
\f0 ]\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0         int
\f0\b0  time = 7700;  \
	 //time
\f1 \'bf\'a1
\f0  
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'bd\'c3\'b0\'a3\'c0\'cc
\f0  
\f1 \'c3\'ca\'b4\'dc\'c0\'a7\'b7\'ce
\f0  
\f1 \'c0\'fa\'c0\'e5\'b5\'c7\'be\'ee
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\
	 //time
\f1 \'c0\'ba
\f0  
\f1 \'b8\'ee
\f0  
\f1 \'bd\'c3\'b0\'a3
\f0  
\f1 \'b8\'ee
\f0  
\f1 \'ba\'d0
\f0 , 
\f1 \'b8\'ee
\f0  
\f1 \'c3\'ca\'c0\'ce\'c1\'f6
\f0  
\f1 \'b0\'e8\'bb\'ea
\f0 \
	 //2
\f1 \'bd\'c3\'b0\'a3
\f0  8
\f1 \'ba\'d0
\f0  20
\f1 \'c3\'ca
\f0  \
	 \
	 
\f2\b int
\f0\b0  hour = time / 3600; //
\f1 \'bd\'c3\'b0\'a3\'b1\'b8\'c7\'cf\'b1\'e2
\f0 \
	 //
\f1 \'ba\'d0
\f0  
\f1 \'b1\'b8\'c7\'cf\'b1\'e2
\f0  :
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'bd\'c3\'b0\'a3\'bf\'a1\'bc\'ad
\f0  
\f1 \'bd\'c3\'b0\'a3\'c0\'cc
\f0  
\f1 \'b0\'a1\'c1\'ae\'b0\'a3
\f0  
\f1 \'ba\'ce\'ba\'d0\'c0\'bb
\f0  
\f1 \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed
\f0  60
\f1 \'c0\'b8\'b7\'ce
\f0  
\f1 \'b3\'aa\'b4\'a9\'b1\'e2
\f0 \
	 
\f2\b int
\f0\b0  minute = (time - hour * 3600)/60;\
	 //
\f1 \'c3\'ca
\f0  
\f1 \'b1\'b8\'c7\'cf\'b1\'e2
\f0  : 
\f1 \'c0\'fc\'c3\'bc
\f0  
\f1 \'bd\'c3\'b0\'a3\'bf\'a1\'bc\'ad
\f0  
\f1 \'bd\'c3\'b0\'a3\'b0\'fa
\f0  
\f1 \'ba\'d0\'c0\'cc
\f0  
\f1 \'b0\'a1\'c1\'ae\'b0\'a3
\f0  
\f1 \'ba\'ce\'ba\'d0\'c0\'bb
\f0  
\f1 \'c1\'a6\'bf\'dc
\f0 \
	 
\f2\b int
\f0\b0  second = time % 60;  // == \ul int\ulnone  second = (time - hour * 3600 - minute * 60);\
	 \
	 System.
\f3\i\b out
\f0\i0\b0 .printf("%d 
\f1 \'bd\'c3\'b0\'a3
\f0  %d
\f1 \'ba\'d0
\f0  %d
\f1 \'c3\'ca
\f0 \\n", hour, minute, second);\
        
\f1 \'b0\'e1\'b0\'fa\'b0\'aa
\f0  :   2 
\f1 \'bd\'c3\'b0\'a3
\f0  8
\f1 \'ba\'d0
\f0  20
\f1 \'c3\'ca
\f0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 **
\f1 \'c1\'a6\'be\'ee\'b9\'ae
\f0 (Control Statement)\
=>
\f1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'c7
\f0  
\f1 \'bd\'c7\'c7\'e0\'c8\'e5\'b8\'a7\'c0\'bb
\f0  
\f1 \'ba\'af\'b0\'e6\'c7\'cf\'b4\'c2
\f0  
\f1 \'b8\'ed\'b7\'c9\'be\'ee
\f0 \
=>
\f1 \'ba\'d0\'b1\'e2\'b9\'ae\'b0\'fa
\f0  
\f1 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'b8\'b7\'ce
\f0  
\f1 \'b1\'b8\'ba\'d0
\f0 \
\pard\tx2377\pardeftab560\slleading20\partightenfactor0
\cf0 \
1)
\f1 \'ba\'d0\'b1\'e2
\f0 (
\f1 \'bc\'b1\'c5\'c3
\f0 )\
-
\f1 \'c1\'b6\'b0\'c7
\f0 (true,false)
\f1 \'bf\'a1
\f0  
\f1 \'c0\'c7\'c7\'d1
\f0  
\f1 \'ba\'d0\'b1\'e2
\f0  : if\
-
\f1 \'b0\'aa\'bf\'a1
\f0  
\f1 \'c0\'c7\'c7\'d1
\f0  
\f1 \'ba\'d0\'b1\'e2
\f0  : switch\
\
2)
\f1 \'b9\'dd\'ba\'b9
\f0 (Loop, Iteration, Enumeration)\
-while : 
\f1 \'c1\'b6\'b0\'c7\'bf\'a1
\f0  
\f1 \'c0\'c7\'c7\'d1
\f0  
\f1 \'b9\'dd\'ba\'b9
\f0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 -do ~ while : 
\f1 \'b9\'ab\'c1\'b6\'b0\'c7
\f0  1
\f1 \'b9\'f8\'c0\'ba
\f0  
\f1 \'bc\'f6\'c7\'e0
\f0    -> 
\f1 \'b8\'f0\'b5\'e7
\f0  do ~ while
\f1 \'c0\'ba
\f0  while
\f1 \'b7\'ce
\f0  
\f1 \'ba\'af\'b0\'e6\'b0\'a1\'b4\'c9
\f0 \
-for : 
\f1 \'bd\'c3\'c0\'db
\f0 ~
\f1 \'c1\'be\'b7\'e1
\f0  
\f1 \'b1\'ee\'c1\'f6
\f0  
\f1 \'b9\'dd\'ba\'b9
\f0 \
-for ~ each : 
\f1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7
\f0  
\f1 \'b8\'f0\'c0\'d3
\f0  
\f1 \'bc\'f8\'c8\'b8
\f0 \
-
\f1 \'b1\'e2\'c5\'b8
\f0  : break(
\f1 \'c1\'df\'b4\'dc
\f0 ) , continue(
\f1 \'b4\'d9\'c0\'bd\'c0\'b8\'b7\'ce
\f0  
\f1 \'b3\'d1\'be\'ee\'b0\'a1\'b1\'e2
\f0 ), return(
\f1 \'c8\'a3\'c3\'e2\'c7\'d1
\f0  
\f1 \'b0\'f7\'c0\'b8\'b7\'ce
\f0  
\f1 \'b5\'b9\'be\'c6\'b0\'a1\'b1\'e2
\f0 )\
 \
**
\f1 \'c4\'dc\'bc\'d6\'bf\'a1\'bc\'ad
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2
\f0\fs24 \

\fs36 Java.util.Scanner 
\f1 \'b6\'f3\'b4\'c2
\f0  
\f1 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d2
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'d9
\f0 .\
=> 
\f1 \'bb\'f3\'b4\'dc\'bf\'a1
\f0  import java.util.*;
\f1 \'c0\'bb
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'b8\'e9
\f0  Scanner
\f1 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6
\f0  Scanner
\f1 \'b6\'f3\'b0\'ed
\f0  
\f1 \'bd\'e1\'bc\'ad
\f0  
\f1 \'bb\'e7\'bf\'eb\'c0\'cc
\f0  
\f1 \'b0\'a1\'b4\'c9
\f0 \
\
=>
\f1 \'bb\'e7\'bf\'eb\'b9\'fd
\f0 \

\f1 \'bd\'ba\'c4\'b3\'b3\'ca
\f0  
\f1 \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7
\f0  
\f1 \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'b8\'a6
\f0  
\f1 \'bb\'fd\'bc\'ba
\f0 \
Scanner 
\f1 \'c0\'cc\'b8\'a7
\f0  = new Scanner({\field{\*\fldinst{HYPERLINK "http://System.in"}}{\fldrslt \cf4 System.in}}); //
\f1 \'c5\'b0\'ba\'b8\'b5\'e5\'b7\'ce\'ba\'ce\'c5\'cd
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'c0\'bb
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'c0\'d6\'b4\'c2
\f0  Scanner
\f1 \'bb\'fd\'bc\'ba
\f0 \
\

\f1 \'ba\'af\'bc\'f6\'b8\'ed
\f0  = 
\f1 \'c0\'cc\'b8\'a7
\f0 .next
\f1 \'c0\'da\'b7\'e1\'c7\'fc
\f0 ();\
=>
\f1 \'c1\'a4\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  nextInt();\
=>
\f1 \'bd\'c7\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  nextDouble();\
=>
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'cf\'b8\'e9
\f0  nextLine();\
\
**if\
1)
\f1 \'b4\'dc\'bc\'f8
\f0 if : 
\f1 \'c1\'b6\'b0\'c7\'c0\'bb
\f0  
\f1 \'b8\'b8\'c1\'b7\'c7\'cf\'b4\'c2
\f0  
\f1 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8
\f0  
\f1 \'c0\'db\'be\'f7\'c0\'bb
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \
if(boolean 
\f1 \'ba\'af\'bc\'f6\'b3\'aa
\f0  boolean
\f1 \'c0\'b8\'b7\'ce
\f0  
\f1 \'b3\'aa\'bf\'c0\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'bd\'c4
\f0 ) \{\
  ()
\f1 \'be\'c8\'c0\'c7
\f0  
\f1 \'b3\'bb\'bf\'eb\'c0\'cc
\f0  true
\f1 \'c0\'cf
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bc\'f6\'c7\'e0
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b3\'bb\'bf\'eb
\f0  \
\}\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs26 \cf0 [
\f1 \'bf\'b9\'b9\'ae
\f0 ]-
\f1 \'c1\'a1\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6\'bc\'ad
\f0  
\f1 \'c1\'a1\'bc\'f6\'b0\'a1
\f0  60
\f1 \'c1\'a1\'c0\'cc
\f0  
\f1 \'b3\'d1\'c0\'b8\'b8\'e9
\f0  
\f1 \'c7\'d5\'b0\'dd\'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b\fs24 \cf0 import
\f0\b0  java.util.Scanner;
\f1\fs26 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b\fs24 \cf0 public
\f0\b0  
\f2\b static
\f0\b0  
\f2\b void
\f0\b0  main(String[] args) \{
\fs26 \
Scanner \ul sc\ulnone  = 
\f2\b new
\f0\b0  Scanner(System.
\f3\i\b in
\f0\i0\b0 );\
		\
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c1\'a1\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4
\f0 : ");\
		//
\f1 \'c1\'a4\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6\'bc\'ad
\f0  score
\f1 \'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
		
\f2\b int
\f0\b0  score = sc.nextInt();\
		\
		//score
\f1 \'b0\'a1
\f0  60
\f1 \'c0\'cc\'c0\'cc\'b8\'e9
\f0  
\f1 \'c7\'d5\'b0\'dd\'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		
\f2\b if
\f0\b0 (score >= 60) \{\
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c7\'d5\'b0\'dd
\f0 \\n");
\fs24 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 2)if~else\
=>
\f1 \'c1\'b6\'b0\'c7\'bf\'a1
\f0  
\f1 \'b8\'c2\'c0\'bb
\f0  
\f1 \'b6\'a7\'bf\'cd
\f0  
\f1 \'b1\'d7\'b7\'b8\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'bb
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bc\'ad\'b7\'ce
\f0  
\f1 \'b4\'d9\'b8\'a5
\f0  
\f1 \'c3\'b3\'b8\'ae\'b8\'a6
\f0  
\f1 \'c7\'cf\'b0\'ed\'c0\'da
\f0  
\f1 \'c7\'d2
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bb\'e7\'bf\'eb
\f0 \
if(boolean
\f1 \'ba\'af\'bc\'f6\'b3\'aa
\f0  boolean
\f1 \'c0\'cc
\f0  
\f1 \'b3\'aa\'bf\'c0\'b4\'c2
\f0  
\f1 \'bf\'ac\'bb\'ea\'bd\'c4
\f0 )\{\
  ()
\f1 \'be\'c8\'c0\'c7
\f0  
\f1 \'b3\'bb\'bf\'eb\'c0\'cc
\f0  true
\f1 \'c0\'cf
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d2
\f0  
\f1 \'b3\'bb\'bf\'eb
\f0 \
\}else \{\
  ()
\f1 \'be\'c8\'c0\'c7
\f0  
\f1 \'b3\'bb\'bf\'eb\'c0\'cc
\f0  false
\f1 \'c0\'cf
\f0  
\f1 \'b6\'a7
\f0  
\f1 \'bc\'f6\'c7\'e0\'c7\'d2
\f0  
\f1 \'b3\'bb\'bf\'eb
\f0 \
\}\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs26 \cf0 [
\f1 \'bf\'b9\'b9\'ae
\f0 ]-
\f1 \'c1\'a1\'bc\'f6\'b0\'a1
\f0  60
\f1 \'c0\'cc\'bb\'f3\'c0\'cc\'b8\'e9
\f0  
\f1 \'c7\'d5\'b0\'dd
\f0  
\f1 \'b1\'d7\'b7\'b8\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'b8\'b8\'e9
\f0  
\f1 \'ba\'d2\'c7\'d5\'b0\'dd\'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 import
\f0\b0  java.util.Scanner;
\f1 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0 \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0 public
\f0\b0  
\f2\b static
\f0\b0  
\f2\b void
\f0\b0  main(String[] args) \{\
Scanner \ul sc\ulnone  = 
\f2\b new
\f0\b0  Scanner(System.
\f3\i\b in
\f0\i0\b0 );\
		\
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c1\'a1\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4
\f0 : ");\
		//
\f1 \'c1\'a4\'bc\'f6\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6\'bc\'ad
\f0  score
\f1 \'bf\'a1
\f0  
\f1 \'c0\'fa\'c0\'e5
\f0 \
		
\f2\b int
\f0\b0  score = sc.nextInt();\
		\
		//score
\f1 \'b0\'a1
\f0  60
\f1 \'c0\'cc\'c0\'cc\'b8\'e9
\f0  
\f1 \'c7\'d5\'b0\'dd\'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2
\f0 \
		
\f2\b if
\f0\b0 (score >= 60) \{\
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'c7\'d5\'b0\'dd
\f0 \\n");\
                \}
\f2\b else
\f0\b0  \{\
		  System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'ba\'d2\'c7\'d5\'b0\'dd
\f0 \\n");\
		\}\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 \
**
\f1 \'b9\'ae\'c0\'da\'bf\'ad\'c0\'ba
\f0  
\f1 \cf3 \'b9\'ae\'c0\'da\'bf\'ad
\f0 .equals(
\f1 \'b9\'ae\'c0\'da\'bf\'ad
\f0 )\cf0  
\f1 \'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad
\f0  
\f1 \'b3\'bb\'bf\'eb\'c0\'cc
\f0  
\f1 \'b0\'b0\'c0\'ba\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'d1\'b4\'d9
\f0 .\
String name = \'93
\f1 \'b9\'da\'b9\'ae\'bc\'ae
\f0 \'94;   \
//name
\f1 \'c0\'cc
\f0  
\f1 \'b9\'da\'b9\'ae\'bc\'ae\'c0\'ce\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce
\f0 \
name.equals(\'93
\f1 \'b9\'da\'b9\'ae\'bc\'ae
\f0 \'94)
\f1 \'b7\'ce
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'d1\'b4\'d9
\f0 .\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 [
\f1 \'bf\'b9\'b9\'ae
\f0 ]-id
\f1 \'b0\'a1
\f0  root
\f1 \'c0\'cc\'b0\'ed
\f0  \ul pw
\f1 \ulnone \'b0\'a1
\f0  1234
\f1 \'c0\'cc\'b8\'e9
\f0  
\f1 \'b7\'ce\'b1\'d7\'c0\'ce
\f0  
\f1 \'bc\'ba\'b0\'f8
\f0  
\f1 \'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b0\'ed
\f0  
\f1 \'b1\'d7\'b7\'b8\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'b8\'b8\'e9
\f0  
\f1 \'b7\'ce\'b1\'d7\'c0\'ce
\f0  
\f1 \'bd\'c7\'c6\'d0\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2\

\f0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b \cf0       import
\f0\b0  java.util.Scanner;\
\
             //
\f1 \'be\'c6\'c0\'cc\'b5\'f0\'bf\'cd
\f0  
\f1 \'ba\'f1\'b9\'d0\'b9\'f8\'c8\'a3\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b4\'c2
\f0  
\f1 \'b9\'ae\'c0\'e5
\f0 \
		Scanner sc = 
\f2\b new
\f0\b0  Scanner(System.
\f3\i\b in
\f0\i0\b0 );\
            //
\f1 \'be\'c6\'c0\'cc\'b5\'f0
\f0  
\f1 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2
\f0 \
		System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'be\'c6\'c0\'cc\'b5\'f0\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4
\f0 : ");\
	    String id = sc.nextLine();\
	    System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'ba\'f1\'b9\'d0\'b9\'f8\'b8\'a6
\f0  
\f1 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4
\f0 : ");\
	    String pw = sc.nextLine();\
	    \
	    //id
\f1 \'b0\'a1
\f0  root
\f1 \'c0\'cc\'b0\'ed
\f0  \ul pw
\f1 \ulnone \'b0\'a1
\f0  1234
\f1 \'c0\'cc\'b8\'e9
\f0  
\f1 \'b7\'ce\'b1\'d7\'c0\'ce
\f0  
\f1 \'bc\'ba\'b0\'f8
\f0  
\f1 \'c0\'cc\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b0\'ed
\f0  \
	    //
\f1 \'b1\'d7\'b7\'b8\'c1\'f6
\f0  
\f1 \'be\'ca\'c0\'b8\'b8\'e9
\f0  
\f1 \'b7\'ce\'b1\'d7\'c0\'ce
\f0  
\f1 \'bd\'c7\'c6\'d0\'b6\'f3\'b0\'ed
\f0  
\f1 \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2
\f0 \
	    
\f2\b if
\f0\b0 (id.equals("root") \cf3 &&\cf0  pw.equals("1234")) \{\
	    	System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'b7\'ce\'b1\'d7\'c0\'ce
\f0  
\f1 \'bc\'ba\'b0\'f8
\f0 \\n");\
	    \}
\f2\b else
\f0\b0  \{\
	    	System.
\f3\i\b out
\f0\i0\b0 .printf("
\f1 \'b7\'ce\'b1\'d7\'c0\'ce
\f0  
\f1 \'bd\'c7\'c6\'d0
\f0 \\n");\
\pard\pardeftab560\slleading20\partightenfactor0

\fs36 \cf0 \
\
\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\fs24 \cf0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\
\
\
}